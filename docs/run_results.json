{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.3", "generated_at": "2024-07-10T00:47:40.101668Z", "invocation_id": "f1c358ba-eb11-4963-9644-4063866a3763", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.776086Z", "completed_at": "2024-07-10T00:47:38.416778Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.417021Z", "completed_at": "2024-07-10T00:47:38.417029Z"}], "thread_id": "Thread-3", "execution_time": 0.7974791526794434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *      \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_account_history_data\"\n    \n    where cast(_fivetran_start as timestamp) >= (select max(cast((_fivetran_start) as timestamp)) from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\" )\n     \n),\n\nfinal as (\n\n    select \n        id as account_id,\n        cast(_fivetran_start as timestamp) as _fivetran_start,\n        cast(_fivetran_end as timestamp) as _fivetran_end,\n        cast(_fivetran_start as date) as _fivetran_date,\n        md5(cast(coalesce(cast(id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(_fivetran_start as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as history_unique_key,\n\n        \"_fivetran_active\",\n  \"_fivetran_synced\",\n  \"account_number\",\n  \"account_source\",\n  \"annual_revenue\",\n  \"billing_city\",\n  \"billing_country\",\n  \"billing_postal_code\",\n  \"billing_state\",\n  \"billing_street\",\n  \"description\",\n  \"industry\",\n  \"is_deleted\",\n  \"last_activity_date\",\n  \"last_referenced_date\",\n  \"last_viewed_date\",\n  \"master_record_id\",\n  \"name\",\n  \"number_of_employees\",\n  \"owner_id\",\n  \"ownership\",\n  \"parent_id\",\n  \"rating\",\n  \"record_type_id\",\n  \"shipping_city\",\n  \"shipping_country\",\n  \"shipping_postal_code\",\n  \"shipping_state\",\n  \"shipping_street\",\n  \"type\",\n  \"website\"\n    from base\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.734124Z", "completed_at": "2024-07-10T00:47:38.533840Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.534677Z", "completed_at": "2024-07-10T00:47:38.534686Z"}], "thread_id": "Thread-2", "execution_time": 0.8797240257263184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__account", "compiled": true, "compiled_code": "with fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    \n    \n    account_source\n    \n as \n    \n    account_source\n    \n, \n    \n    \n    annual_revenue\n    \n as \n    \n    annual_revenue\n    \n, \n    \n    \n    billing_city\n    \n as \n    \n    billing_city\n    \n, \n    \n    \n    billing_country\n    \n as \n    \n    billing_country\n    \n, \n    \n    \n    billing_postal_code\n    \n as \n    \n    billing_postal_code\n    \n, \n    \n    \n    billing_state\n    \n as \n    \n    billing_state\n    \n, \n    \n    \n    billing_state_code\n    \n as \n    \n    billing_state_code\n    \n, \n    \n    \n    billing_street\n    \n as \n    \n    billing_street\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    industry\n    \n as \n    \n    industry\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    master_record_id\n    \n as \n    \n    master_record_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    number_of_employees\n    \n as \n    \n    number_of_employees\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    ownership\n    \n as \n    \n    ownership\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    rating\n    \n as \n    \n    rating\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    shipping_city\n    \n as \n    \n    shipping_city\n    \n, \n    \n    \n    shipping_country\n    \n as \n    \n    shipping_country\n    \n, \n    \n    \n    shipping_country_code\n    \n as \n    \n    shipping_country_code\n    \n, \n    \n    \n    shipping_postal_code\n    \n as \n    \n    shipping_postal_code\n    \n, \n    \n    \n    shipping_state\n    \n as \n    \n    shipping_state\n    \n, \n    \n    \n    shipping_state_code\n    \n as \n    \n    shipping_state_code\n    \n, \n    \n    \n    shipping_street\n    \n as \n    \n    shipping_street\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n, \n    cast(null as TEXT) as \n    \n    AccountNumber\n    \n , \n    cast(null as TEXT) as \n    \n    AccountSource\n    \n , \n    cast(null as float) as \n    \n    AnnualRevenue\n    \n , \n    cast(null as TEXT) as \n    \n    BillingCity\n    \n , \n    cast(null as TEXT) as \n    \n    BillingCountry\n    \n , \n    cast(null as TEXT) as \n    \n    BillingPostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    BillingState\n    \n , \n    cast(null as TEXT) as \n    \n    BillingStateCode\n    \n , \n    cast(null as TEXT) as \n    \n    BillingStreet\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as timestamp) as \n    \n    LastActivityDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    MasterRecordId\n    \n , \n    cast(null as integer) as \n    \n    NumberOfEmployees\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    ParentId\n    \n , \n    cast(null as TEXT) as \n    \n    RecordTypeId\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCity\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCountry\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingPostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingState\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingStateCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingStreet\n    \n \n\n\n\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_account_data\"\n), \n\nfinal as (\n    select\n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    coalesce(cast(AccountNumber as TEXT),\n        cast(account_number as TEXT))\n        as account_number,\n        \n\n\n    coalesce(cast(AccountSource as TEXT),\n        cast(account_source as TEXT))\n        as account_source,\n        \n\n\n    coalesce(cast(AnnualRevenue as numeric(28,6)),\n        cast(annual_revenue as numeric(28,6)))\n        as annual_revenue,\n        \n\n\n    coalesce(cast(BillingCity as TEXT),\n        cast(billing_city as TEXT))\n        as billing_city,\n        \n\n\n    coalesce(cast(BillingCountry as TEXT),\n        cast(billing_country as TEXT))\n        as billing_country,\n        \n\n\n    coalesce(cast(BillingPostalCode as TEXT),\n        cast(billing_postal_code as TEXT))\n        as billing_postal_code,\n        \n\n\n    coalesce(cast(BillingState as TEXT),\n        cast(billing_state as TEXT))\n        as billing_state,\n        \n\n\n    coalesce(cast(BillingStateCode as TEXT),\n        cast(billing_state_code as TEXT))\n        as billing_state_code,\n        \n\n\n    coalesce(cast(BillingStreet as TEXT),\n        cast(billing_street as TEXT))\n        as billing_street,\n        \n\n\n    cast(Description as TEXT) as account_description,\n        \n\n\n    cast(Id as TEXT) as account_id,\n        \n\n\n    cast(Industry as TEXT) as industry,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(LastActivityDate as timestamp),\n        cast(last_activity_date as timestamp))\n        as last_activity_date,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(MasterRecordId as TEXT),\n        cast(master_record_id as TEXT))\n        as master_record_id,\n        \n\n\n    cast(Name as TEXT) as account_name,\n        \n\n\n    coalesce(cast(NumberOfEmployees as integer),\n        cast(number_of_employees as integer))\n        as number_of_employees,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    cast(Ownership as TEXT) as ownership,\n        \n\n\n    coalesce(cast(ParentId as TEXT),\n        cast(parent_id as TEXT))\n        as parent_id,\n        \n\n\n    cast(Rating as TEXT) as rating,\n        \n\n\n    coalesce(cast(RecordTypeId as TEXT),\n        cast(record_type_id as TEXT))\n        as record_type_id,\n        \n\n\n    coalesce(cast(ShippingCity as TEXT),\n        cast(shipping_city as TEXT))\n        as shipping_city,\n        \n\n\n    coalesce(cast(ShippingCountry as TEXT),\n        cast(shipping_country as TEXT))\n        as shipping_country,\n        \n\n\n    coalesce(cast(ShippingCountryCode as TEXT),\n        cast(shipping_country_code as TEXT))\n        as shipping_country_code,\n        \n\n\n    coalesce(cast(ShippingPostalCode as TEXT),\n        cast(shipping_postal_code as TEXT))\n        as shipping_postal_code,\n        \n\n\n    coalesce(cast(ShippingState as TEXT),\n        cast(shipping_state as TEXT))\n        as shipping_state,\n        \n\n\n    coalesce(cast(ShippingStateCode as TEXT),\n        cast(shipping_state_code as TEXT))\n        as shipping_state_code,\n        \n\n\n    coalesce(cast(ShippingStreet as TEXT),\n        cast(shipping_street as TEXT))\n        as shipping_street,\n        \n\n\n    cast(Type as TEXT) as type,\n        \n\n\n    cast(Website as TEXT) as website\n\n        \n\n\n\n\n\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.831505Z", "completed_at": "2024-07-10T00:47:38.534404Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.535599Z", "completed_at": "2024-07-10T00:47:38.535606Z"}], "thread_id": "Thread-6", "execution_time": 0.8861808776855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__event", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__event_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_date_time\n    \n as \n    \n    activity_date_time\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    end_date_time\n    \n as \n    \n    end_date_time\n    \n, \n    \n    \n    event_subtype\n    \n as \n    \n    event_subtype\n    \n, \n    \n    \n    group_event_type\n    \n as \n    \n    group_event_type\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_child\n    \n as \n    \n    is_child\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_group_event\n    \n as \n    \n    is_group_event\n    \n, \n    \n    \n    is_recurrence\n    \n as \n    \n    is_recurrence\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    start_date_time\n    \n as \n    \n    start_date_time\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    what_count\n    \n as \n    \n    what_count\n    \n, \n    \n    \n    what_id\n    \n as \n    \n    what_id\n    \n, \n    \n    \n    who_count\n    \n as \n    \n    who_count\n    \n, \n    \n    \n    who_id\n    \n as \n    \n    who_id\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as timestamp) as \n    \n    ActivityDate\n    \n , \n    cast(null as timestamp) as \n    \n    ActivityDateTime\n    \n , \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as timestamp) as \n    \n    EndDate\n    \n , \n    cast(null as timestamp) as \n    \n    EndDateTime\n    \n , \n    cast(null as TEXT) as \n    \n    EventSubtype\n    \n , \n    cast(null as TEXT) as \n    \n    GroupEventType\n    \n , \n    cast(null as boolean) as \n    \n    IsArchived\n    \n , \n    cast(null as boolean) as \n    \n    IsChild\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as boolean) as \n    \n    IsGroupEvent\n    \n , \n    cast(null as boolean) as \n    \n    IsRecurrence\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as timestamp) as \n    \n    StartDateTime\n    \n , \n    cast(null as integer) as \n    \n    WhatCount\n    \n , \n    cast(null as TEXT) as \n    \n    WhatId\n    \n , \n    cast(null as integer) as \n    \n    WhoCount\n    \n , \n    cast(null as TEXT) as \n    \n    WhoId\n    \n \n\n\n\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_event_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as event_id,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    coalesce(cast(ActivityDate as timestamp),\n        cast(activity_date as timestamp))\n        as activity_date,\n        \n\n\n    coalesce(cast(ActivityDateTime as timestamp),\n        cast(activity_date_time as timestamp))\n        as activity_date_time,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as event_description,\n        \n\n\n    coalesce(cast(EndDate as timestamp),\n        cast(end_date as timestamp))\n        as end_date,\n        \n\n\n    coalesce(cast(EndDateTime as timestamp),\n        cast(end_date_time as timestamp))\n        as end_date_time,\n        \n\n\n    coalesce(cast(EventSubtype as TEXT),\n        cast(event_subtype as TEXT))\n        as event_subtype,\n        \n\n\n    coalesce(cast(GroupEventType as TEXT),\n        cast(group_event_type as TEXT))\n        as group_event_type,\n        \n\n\n    coalesce(cast(IsArchived as boolean),\n        cast(is_archived as boolean))\n        as is_archived,\n        \n\n\n    coalesce(cast(IsChild as boolean),\n        cast(is_child as boolean))\n        as is_child,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(IsGroupEvent as boolean),\n        cast(is_group_event as boolean))\n        as is_group_event,\n        \n\n\n    coalesce(cast(IsRecurrence as boolean),\n        cast(is_recurrence as boolean))\n        as is_recurrence,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    cast(Location as TEXT) as location,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    coalesce(cast(StartDateTime as timestamp),\n        cast(start_date_time as timestamp))\n        as start_date_time,\n        \n\n\n    cast(Subject as TEXT) as subject,\n        \n\n\n    cast(Type as TEXT) as type,\n        \n\n\n    coalesce(cast(WhatCount as integer),\n        cast(what_count as integer))\n        as what_count,\n        \n\n\n    coalesce(cast(WhatId as TEXT),\n        cast(what_id as TEXT))\n        as what_id,\n        \n\n\n    coalesce(cast(WhoCount as integer),\n        cast(who_count as integer))\n        as who_count,\n        \n\n\n    coalesce(cast(WhoId as TEXT),\n        cast(who_id as TEXT))\n        as who_id\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__event\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.823080Z", "completed_at": "2024-07-10T00:47:38.534916Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.535921Z", "completed_at": "2024-07-10T00:47:38.535924Z"}], "thread_id": "Thread-5", "execution_time": 0.8937599658966064, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__contact_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *      \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_contact_history_data\"\n    \n    where cast(_fivetran_start as timestamp) >=  (select max(cast((_fivetran_start) as timestamp)) from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\" )\n     \n),\n\nfinal as (\n\n    select \n        id as contact_id,\n        cast(_fivetran_start as timestamp) as _fivetran_start,\n        cast(_fivetran_end as timestamp) as _fivetran_end,\n        cast(_fivetran_start as date) as _fivetran_date,\n        md5(cast(coalesce(cast(id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(_fivetran_start as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as history_unique_key,\n\n        \"_fivetran_active\",\n  \"_fivetran_synced\",\n  \"account_id\",\n  \"email\",\n  \"first_name\",\n  \"is_deleted\",\n  \"last_activity_date\",\n  \"last_modified_by_id\",\n  \"last_modified_date\",\n  \"last_name\",\n  \"last_referenced_date\",\n  \"last_viewed_date\",\n  \"mailing_city\",\n  \"mailing_country\",\n  \"mailing_country_code\",\n  \"mailing_postal_code\",\n  \"mailing_state\",\n  \"mailing_street\",\n  \"master_record_id\",\n  \"mobile_phone\",\n  \"name\",\n  \"owner_id\",\n  \"phone\",\n  \"reports_to_id\",\n  \"title\",\n  \"lead_source\",\n  \"description\",\n  \"individual_id\",\n  \"home_phone\"\n    from base\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.875452Z", "completed_at": "2024-07-10T00:47:38.545962Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.546219Z", "completed_at": "2024-07-10T00:47:38.546226Z"}], "thread_id": "Thread-8", "execution_time": 0.9387359619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__opportunity", "compiled": true, "compiled_code": "with fields as (\n\n    select\n\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    close_date\n    \n as \n    \n    close_date\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    expected_revenue\n    \n as \n    \n    expected_revenue\n    \n, \n    \n    \n    fiscal\n    \n as \n    \n    fiscal\n    \n, \n    \n    \n    fiscal_quarter\n    \n as \n    \n    fiscal_quarter\n    \n, \n    \n    \n    fiscal_year\n    \n as \n    \n    fiscal_year\n    \n, \n    \n    \n    forecast_category\n    \n as \n    \n    forecast_category\n    \n, \n    \n    \n    forecast_category_name\n    \n as \n    \n    forecast_category_name\n    \n, \n    \n    \n    has_open_activity\n    \n as \n    \n    has_open_activity\n    \n, \n    \n    \n    has_opportunity_line_item\n    \n as \n    \n    has_opportunity_line_item\n    \n, \n    \n    \n    has_overdue_task\n    \n as \n    \n    has_overdue_task\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_closed\n    \n as \n    \n    is_closed\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_won\n    \n as \n    \n    is_won\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    lead_source\n    \n as \n    \n    lead_source\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    next_step\n    \n as \n    \n    next_step\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    probability\n    \n as \n    \n    probability\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    stage_name\n    \n as \n    \n    stage_name\n    \n, \n    \n    \n    synced_quote_id\n    \n as \n    \n    synced_quote_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as TEXT) as \n    \n    CampaignId\n    \n , \n    cast(null as timestamp) as \n    \n    CloseDate\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    ExpectedRevenue\n    \n , \n    cast(null as integer) as \n    \n    FiscalQuarter\n    \n , \n    cast(null as integer) as \n    \n    FiscalYear\n    \n , \n    cast(null as TEXT) as \n    \n    ForecastCategory\n    \n , \n    cast(null as TEXT) as \n    \n    ForecastCategoryName\n    \n , \n    cast(null as boolean) as \n    \n    HasOpenActivity\n    \n , \n    cast(null as boolean) as \n    \n    HasOpportunityLineItem\n    \n , \n    cast(null as boolean) as \n    \n    HasOverdueTask\n    \n , \n    cast(null as boolean) as \n    \n    IsClosed\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as boolean) as \n    \n    IsWon\n    \n , \n    cast(null as timestamp) as \n    \n    LastActivityDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    LeadSource\n    \n , \n    cast(null as TEXT) as \n    \n    NextStep\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    RecordTypeId\n    \n , \n    cast(null as TEXT) as \n    \n    StageName\n    \n , \n    cast(null as TEXT) as \n    \n    SyncedQuoteId\n    \n \n\n\n\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_opportunity_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    cast(Amount as numeric(28,6)) as amount,\n        \n\n\n    coalesce(cast(CampaignId as TEXT),\n        cast(campaign_id as TEXT))\n        as campaign_id,\n        \n\n\n    coalesce(cast(CloseDate as timestamp),\n        cast(close_date as timestamp))\n        as close_date,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as opportunity_description,\n        \n\n\n    coalesce(cast(ExpectedRevenue as numeric(28,6)),\n        cast(expected_revenue as numeric(28,6)))\n        as expected_revenue,\n        \n\n\n    cast(Fiscal as TEXT) as fiscal,\n        \n\n\n    coalesce(cast(FiscalQuarter as integer),\n        cast(fiscal_quarter as integer))\n        as fiscal_quarter,\n        \n\n\n    coalesce(cast(FiscalYear as integer),\n        cast(fiscal_year as integer))\n        as fiscal_year,\n        \n\n\n    coalesce(cast(ForecastCategory as TEXT),\n        cast(forecast_category as TEXT))\n        as forecast_category,\n        \n\n\n    coalesce(cast(ForecastCategoryName as TEXT),\n        cast(forecast_category_name as TEXT))\n        as forecast_category_name,\n        \n\n\n    coalesce(cast(HasOpenActivity as boolean),\n        cast(has_open_activity as boolean))\n        as has_open_activity,\n        \n\n\n    coalesce(cast(HasOpportunityLineItem as boolean),\n        cast(has_opportunity_line_item as boolean))\n        as has_opportunity_line_item,\n        \n\n\n    coalesce(cast(HasOverdueTask as boolean),\n        cast(has_overdue_task as boolean))\n        as has_overdue_task,\n        \n\n\n    cast(Id as TEXT) as opportunity_id,\n        \n\n\n    coalesce(cast(IsClosed as boolean),\n        cast(is_closed as boolean))\n        as is_closed,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(IsWon as boolean),\n        cast(is_won as boolean))\n        as is_won,\n        \n\n\n    coalesce(cast(LastActivityDate as timestamp),\n        cast(last_activity_date as timestamp))\n        as last_activity_date,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(LeadSource as TEXT),\n        cast(lead_source as TEXT))\n        as lead_source,\n        \n\n\n    cast(Name as TEXT) as opportunity_name,\n        \n\n\n    coalesce(cast(NextStep as TEXT),\n        cast(next_step as TEXT))\n        as next_step,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    cast(Probability as float) as probability,\n        \n\n\n    coalesce(cast(RecordTypeId as TEXT),\n        cast(record_type_id as TEXT))\n        as record_type_id,\n        \n\n\n    coalesce(cast(StageName as TEXT),\n        cast(stage_name as TEXT))\n        as stage_name,\n        \n\n\n    coalesce(cast(SyncedQuoteId as TEXT),\n        cast(synced_quote_id as TEXT))\n        as synced_quote_id,\n        \n\n\n    cast(Type as TEXT) as type\n        \n        \n\n\n\n\n\n    from fields\n    where coalesce(_fivetran_active, true)\n), \n\ncalculated as (\n        \n    select \n        *,\n        created_date >= date_trunc('month', \n    current_timestamp::timestamp\n) as is_created_this_month,\n        created_date >= date_trunc('quarter', \n    current_timestamp::timestamp\n) as is_created_this_quarter,\n        \n        ((created_date)::date - (\n    current_timestamp::timestamp\n)::date)\n     as days_since_created,\n        \n        ((created_date)::date - (close_date)::date)\n     as days_to_close,\n        date_trunc('month', close_date) = date_trunc('month', \n    current_timestamp::timestamp\n) as is_closed_this_month,\n        date_trunc('quarter', close_date) = date_trunc('quarter', \n    current_timestamp::timestamp\n) as is_closed_this_quarter\n    from final\n)\n\nselect * \nfrom calculated\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.801564Z", "completed_at": "2024-07-10T00:47:38.624477Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.657544Z", "completed_at": "2024-07-10T00:47:38.657550Z"}], "thread_id": "Thread-4", "execution_time": 1.0173211097717285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__contact", "compiled": true, "compiled_code": "with fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    home_phone\n    \n as \n    \n    home_phone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    individual_id\n    \n as \n    \n    individual_id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    lead_source\n    \n as \n    \n    lead_source\n    \n, \n    \n    \n    mailing_city\n    \n as \n    \n    mailing_city\n    \n, \n    \n    \n    mailing_country\n    \n as \n    \n    mailing_country\n    \n, \n    \n    \n    mailing_country_code\n    \n as \n    \n    mailing_country_code\n    \n, \n    \n    \n    mailing_postal_code\n    \n as \n    \n    mailing_postal_code\n    \n, \n    \n    \n    mailing_state\n    \n as \n    \n    mailing_state\n    \n, \n    \n    \n    mailing_state_code\n    \n as \n    \n    mailing_state_code\n    \n, \n    \n    \n    mailing_street\n    \n as \n    \n    mailing_street\n    \n, \n    \n    \n    master_record_id\n    \n as \n    \n    master_record_id\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    reports_to_id\n    \n as \n    \n    reports_to_id\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as TEXT) as \n    \n    FirstName\n    \n , \n    cast(null as TEXT) as \n    \n    HomePhone\n    \n , \n    cast(null as TEXT) as \n    \n    IndividualId\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as timestamp) as \n    \n    LastActivityDate\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as TEXT) as \n    \n    LastName\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    LeadSource\n    \n , \n    cast(null as TEXT) as \n    \n    MailingCity\n    \n , \n    cast(null as TEXT) as \n    \n    MailingCountry\n    \n , \n    cast(null as TEXT) as \n    \n    MailingCountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    MailingPostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    MailingState\n    \n , \n    cast(null as TEXT) as \n    \n    MailingStateCode\n    \n , \n    cast(null as TEXT) as \n    \n    MailingStreet\n    \n , \n    cast(null as TEXT) as \n    \n    MasterRecordId\n    \n , \n    cast(null as TEXT) as \n    \n    MobilePhone\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    ReportsToId\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_contact_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as contact_id,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    cast(Department as TEXT) as department,\n        \n\n\n    cast(Description as TEXT) as contact_description,\n        \n\n\n    cast(Email as TEXT) as email,\n        \n\n\n    coalesce(cast(FirstName as TEXT),\n        cast(first_name as TEXT))\n        as first_name,\n        \n\n\n    coalesce(cast(HomePhone as TEXT),\n        cast(home_phone as TEXT))\n        as home_phone,\n        \n\n\n    coalesce(cast(IndividualId as TEXT),\n        cast(individual_id as TEXT))\n        as individual_id,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(LastActivityDate as timestamp),\n        cast(last_activity_date as timestamp))\n        as last_activity_date,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(LastName as TEXT),\n        cast(last_name as TEXT))\n        as last_name,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(LeadSource as TEXT),\n        cast(lead_source as TEXT))\n        as lead_source,\n        \n\n\n    coalesce(cast(MailingCity as TEXT),\n        cast(mailing_city as TEXT))\n        as mailing_city,\n        \n\n\n    coalesce(cast(MailingCountry as TEXT),\n        cast(mailing_country as TEXT))\n        as mailing_country,\n        \n\n\n    coalesce(cast(MailingCountryCode as TEXT),\n        cast(mailing_country_code as TEXT))\n        as mailing_country_code,\n        \n\n\n    coalesce(cast(MailingPostalCode as TEXT),\n        cast(mailing_postal_code as TEXT))\n        as mailing_postal_code,\n        \n\n\n    coalesce(cast(MailingState as TEXT),\n        cast(mailing_state as TEXT))\n        as mailing_state,\n        \n\n\n    coalesce(cast(MailingStateCode as TEXT),\n        cast(mailing_state_code as TEXT))\n        as mailing_state_code,\n        \n\n\n    coalesce(cast(MailingStreet as TEXT),\n        cast(mailing_street as TEXT))\n        as mailing_street,\n        \n\n\n    coalesce(cast(MasterRecordId as TEXT),\n        cast(master_record_id as TEXT))\n        as master_record_id,\n        \n\n\n    coalesce(cast(MobilePhone as TEXT),\n        cast(mobile_phone as TEXT))\n        as mobile_phone,\n        \n\n\n    cast(Name as TEXT) as contact_name,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    cast(Phone as TEXT) as phone,\n        \n\n\n    coalesce(cast(ReportsToId as TEXT),\n        cast(reports_to_id as TEXT))\n        as reports_to_id,\n        \n\n\n    cast(Title as TEXT) as title\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.719568Z", "completed_at": "2024-07-10T00:47:38.675698Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.676394Z", "completed_at": "2024-07-10T00:47:38.676399Z"}], "thread_id": "Thread-1", "execution_time": 1.0421209335327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.int_salesforce__date_spine", "compiled": true, "compiled_code": "with spine as (\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1704\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2019-11-11' as date) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= \n\n    cast('2024-07-10' as date) + ((interval '1 day') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n)\n\nselect * \nfrom spine", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"int_salesforce__date_spine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:37.849829Z", "completed_at": "2024-07-10T00:47:38.675997Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.676595Z", "completed_at": "2024-07-10T00:47:38.676598Z"}], "thread_id": "Thread-7", "execution_time": 1.039543628692627, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__lead", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__lead_enabled within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    annual_revenue\n    \n as \n    \n    annual_revenue\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company\n    \n as \n    \n    company\n    \n, \n    \n    \n    converted_account_id\n    \n as \n    \n    converted_account_id\n    \n, \n    \n    \n    converted_contact_id\n    \n as \n    \n    converted_contact_id\n    \n, \n    \n    \n    converted_date\n    \n as \n    \n    converted_date\n    \n, \n    \n    \n    converted_opportunity_id\n    \n as \n    \n    converted_opportunity_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    email_bounced_date\n    \n as \n    \n    email_bounced_date\n    \n, \n    \n    \n    email_bounced_reason\n    \n as \n    \n    email_bounced_reason\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    has_opted_out_of_email\n    \n as \n    \n    has_opted_out_of_email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    individual_id\n    \n as \n    \n    individual_id\n    \n, \n    \n    \n    industry\n    \n as \n    \n    industry\n    \n, \n    \n    \n    is_converted\n    \n as \n    \n    is_converted\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_unread_by_owner\n    \n as \n    \n    is_unread_by_owner\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    lead_source\n    \n as \n    \n    lead_source\n    \n, \n    \n    \n    master_record_id\n    \n as \n    \n    master_record_id\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    number_of_employees\n    \n as \n    \n    number_of_employees\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    postal_code\n    \n as \n    \n    postal_code\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    state_code\n    \n as \n    \n    state_code\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    street\n    \n as \n    \n    street\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n, \n    cast(null as float) as \n    \n    AnnualRevenue\n    \n , \n    cast(null as TEXT) as \n    \n    ConvertedAccountId\n    \n , \n    cast(null as TEXT) as \n    \n    ConvertedContactId\n    \n , \n    cast(null as timestamp) as \n    \n    ConvertedDate\n    \n , \n    cast(null as TEXT) as \n    \n    ConvertedOpportunityId\n    \n , \n    cast(null as TEXT) as \n    \n    CountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as timestamp) as \n    \n    EmailBouncedDate\n    \n , \n    cast(null as TEXT) as \n    \n    EmailBouncedReason\n    \n , \n    cast(null as TEXT) as \n    \n    FirstName\n    \n , \n    cast(null as boolean) as \n    \n    HasOptedOutOfEmail\n    \n , \n    cast(null as TEXT) as \n    \n    IndividualId\n    \n , \n    cast(null as boolean) as \n    \n    IsConverted\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as boolean) as \n    \n    IsUnreadByOwner\n    \n , \n    cast(null as timestamp) as \n    \n    LastActivityDate\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as TEXT) as \n    \n    LastName\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    LeadSource\n    \n , \n    cast(null as TEXT) as \n    \n    MasterRecordId\n    \n , \n    cast(null as TEXT) as \n    \n    MobilePhone\n    \n , \n    cast(null as integer) as \n    \n    NumberOfEmployees\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    PostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    StateCode\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_lead_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as lead_id,\n        \n\n\n    coalesce(cast(AnnualRevenue as numeric(28,6)),\n        cast(annual_revenue as numeric(28,6)))\n        as annual_revenue,\n        \n\n\n    cast(City as TEXT) as city,\n        \n\n\n    cast(Company as TEXT) as company,\n        \n\n\n    coalesce(cast(ConvertedAccountId as TEXT),\n        cast(converted_account_id as TEXT))\n        as converted_account_id,\n        \n\n\n    coalesce(cast(ConvertedContactId as TEXT),\n        cast(converted_contact_id as TEXT))\n        as converted_contact_id,\n        \n\n\n    coalesce(cast(ConvertedDate as timestamp),\n        cast(converted_date as timestamp))\n        as converted_date,\n        \n\n\n    coalesce(cast(ConvertedOpportunityId as TEXT),\n        cast(converted_opportunity_id as TEXT))\n        as converted_opportunity_id,\n        \n\n\n    cast(Country as TEXT) as country,\n        \n\n\n    coalesce(cast(CountryCode as TEXT),\n        cast(country_code as TEXT))\n        as country_code,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as lead_description,\n        \n\n\n    cast(Email as TEXT) as email,\n        \n\n\n    coalesce(cast(EmailBouncedDate as timestamp),\n        cast(email_bounced_date as timestamp))\n        as email_bounced_date,\n        \n\n\n    coalesce(cast(EmailBouncedReason as TEXT),\n        cast(email_bounced_reason as TEXT))\n        as email_bounced_reason,\n        \n\n\n    coalesce(cast(FirstName as TEXT),\n        cast(first_name as TEXT))\n        as first_name,\n        \n\n\n    coalesce(cast(HasOptedOutOfEmail as boolean),\n        cast(has_opted_out_of_email as boolean))\n        as has_opted_out_of_email,\n        \n\n\n    coalesce(cast(IndividualId as TEXT),\n        cast(individual_id as TEXT))\n        as individual_id,\n        \n\n\n    cast(Industry as TEXT) as industry,\n        \n\n\n    coalesce(cast(IsConverted as boolean),\n        cast(is_converted as boolean))\n        as is_converted,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(IsUnreadByOwner as boolean),\n        cast(is_unread_by_owner as boolean))\n        as is_unread_by_owner,\n        \n\n\n    coalesce(cast(LastActivityDate as timestamp),\n        cast(last_activity_date as timestamp))\n        as last_activity_date,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(LastName as TEXT),\n        cast(last_name as TEXT))\n        as last_name,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(LeadSource as TEXT),\n        cast(lead_source as TEXT))\n        as lead_source,\n        \n\n\n    coalesce(cast(MasterRecordId as TEXT),\n        cast(master_record_id as TEXT))\n        as master_record_id,\n        \n\n\n    coalesce(cast(MobilePhone as TEXT),\n        cast(mobile_phone as TEXT))\n        as mobile_phone,\n        \n\n\n    cast(Name as TEXT) as lead_name,\n        \n\n\n    coalesce(cast(NumberOfEmployees as integer),\n        cast(number_of_employees as integer))\n        as number_of_employees,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    cast(Phone as TEXT) as phone,\n        \n\n\n    coalesce(cast(PostalCode as TEXT),\n        cast(postal_code as TEXT))\n        as postal_code,\n        \n\n\n    cast(State as TEXT) as state,\n        \n\n\n    coalesce(cast(StateCode as TEXT),\n        cast(state_code as TEXT))\n        as state_code,\n        \n\n\n    cast(Status as TEXT) as status,\n        \n\n\n    cast(Street as TEXT) as street,\n        \n\n\n    cast(Title as TEXT) as title,\n        \n\n\n    cast(Website as TEXT) as website\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__lead\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.771024Z", "completed_at": "2024-07-10T00:47:38.772312Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.772841Z", "completed_at": "2024-07-10T00:47:38.772852Z"}], "thread_id": "Thread-7", "execution_time": 0.012798070907592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.775116Z", "completed_at": "2024-07-10T00:47:38.776463Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.776714Z", "completed_at": "2024-07-10T00:47:38.776719Z"}], "thread_id": "Thread-7", "execution_time": 0.0022118091583251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.778040Z", "completed_at": "2024-07-10T00:47:38.779445Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.779729Z", "completed_at": "2024-07-10T00:47:38.779734Z"}], "thread_id": "Thread-7", "execution_time": 0.0024089813232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_contact_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.781097Z", "completed_at": "2024-07-10T00:47:38.782424Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.782707Z", "completed_at": "2024-07-10T00:47:38.782712Z"}], "thread_id": "Thread-7", "execution_time": 0.0023832321166992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_contact_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.783984Z", "completed_at": "2024-07-10T00:47:38.785260Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.785494Z", "completed_at": "2024-07-10T00:47:38.785498Z"}], "thread_id": "Thread-7", "execution_time": 0.0020699501037597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_event_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.786589Z", "completed_at": "2024-07-10T00:47:38.788058Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.788316Z", "completed_at": "2024-07-10T00:47:38.788321Z"}], "thread_id": "Thread-7", "execution_time": 0.002298116683959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.789432Z", "completed_at": "2024-07-10T00:47:38.791333Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.791601Z", "completed_at": "2024-07-10T00:47:38.791607Z"}], "thread_id": "Thread-7", "execution_time": 0.0027008056640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.792878Z", "completed_at": "2024-07-10T00:47:38.794281Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.794570Z", "completed_at": "2024-07-10T00:47:38.794576Z"}], "thread_id": "Thread-7", "execution_time": 0.002457857131958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.796007Z", "completed_at": "2024-07-10T00:47:38.797289Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.797543Z", "completed_at": "2024-07-10T00:47:38.797547Z"}], "thread_id": "Thread-7", "execution_time": 0.002212047576904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.798660Z", "completed_at": "2024-07-10T00:47:38.799888Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.800119Z", "completed_at": "2024-07-10T00:47:38.800123Z"}], "thread_id": "Thread-7", "execution_time": 0.002015829086303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_order_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.801148Z", "completed_at": "2024-07-10T00:47:38.802343Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.802541Z", "completed_at": "2024-07-10T00:47:38.802545Z"}], "thread_id": "Thread-7", "execution_time": 0.0018601417541503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_product_2_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.803489Z", "completed_at": "2024-07-10T00:47:38.804696Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.804923Z", "completed_at": "2024-07-10T00:47:38.804928Z"}], "thread_id": "Thread-7", "execution_time": 0.0019021034240722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.805999Z", "completed_at": "2024-07-10T00:47:38.807806Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.808014Z", "completed_at": "2024-07-10T00:47:38.808018Z"}], "thread_id": "Thread-7", "execution_time": 0.002588033676147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.808997Z", "completed_at": "2024-07-10T00:47:38.810231Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:38.810543Z", "completed_at": "2024-07-10T00:47:38.810556Z"}], "thread_id": "Thread-7", "execution_time": 0.0020558834075927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_user_role_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.524125Z", "completed_at": "2024-07-10T00:47:39.121532Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.121790Z", "completed_at": "2024-07-10T00:47:39.121802Z"}], "thread_id": "Thread-3", "execution_time": 0.6570942401885986, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__opportunity_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *   \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_opportunity_history_data\"\n    \n    where cast(_fivetran_start as timestamp) >=  (select max(cast((_fivetran_start) as timestamp)) from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\" )\n     \n),\n\nfinal as (\n\n    select \n        id as opportunity_id,\n        cast(_fivetran_start as timestamp) as _fivetran_start,\n        cast(_fivetran_end as timestamp) as _fivetran_end,\n        cast(_fivetran_start as date) as _fivetran_date,\n        md5(cast(coalesce(cast(id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(_fivetran_start as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as history_unique_key,\n\n        \"_fivetran_active\",\n  \"_fivetran_synced\",\n  \"account_id\",\n  \"amount\",\n  \"campaign_id\",\n  \"close_date\",\n  \"created_date\",\n  \"description\",\n  \"expected_revenue\",\n  \"fiscal\",\n  \"fiscal_quarter\",\n  \"fiscal_year\",\n  \"forecast_category\",\n  \"forecast_category_name\",\n  \"has_open_activity\",\n  \"has_opportunity_line_item\",\n  \"has_overdue_task\",\n  \"is_closed\",\n  \"is_deleted\",\n  \"is_won\",\n  \"last_activity_date\",\n  \"last_referenced_date\",\n  \"last_viewed_date\",\n  \"lead_source\",\n  \"name\",\n  \"next_step\",\n  \"owner_id\",\n  \"probability\",\n  \"record_type_id\",\n  \"stage_name\",\n  \"synced_quote_id\",\n  \"type\"\n    from base\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.184753Z", "completed_at": "2024-07-10T00:47:39.206379Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.207089Z", "completed_at": "2024-07-10T00:47:39.207099Z"}], "thread_id": "Thread-3", "execution_time": 0.023967981338500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.dbt_utils_unique_combination_of_columns_stg_salesforce__account_history_account_id___fivetran_start___fivetran_end.7db755dfc6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, _fivetran_start, _fivetran_end\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\"\n    group by account_id, _fivetran_start, _fivetran_end\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.208818Z", "completed_at": "2024-07-10T00:47:39.217643Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.217950Z", "completed_at": "2024-07-10T00:47:39.217956Z"}], "thread_id": "Thread-3", "execution_time": 0.009901046752929688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__account_history_history_unique_key.e946c6dd0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect history_unique_key\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\"\nwhere history_unique_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.219407Z", "completed_at": "2024-07-10T00:47:39.224882Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.225164Z", "completed_at": "2024-07-10T00:47:39.225170Z"}], "thread_id": "Thread-3", "execution_time": 0.006437778472900391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__account_history_history_unique_key.c378da769f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    history_unique_key as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\"\nwhere history_unique_key is not null\ngroup by history_unique_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.612758Z", "completed_at": "2024-07-10T00:47:39.282631Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.282918Z", "completed_at": "2024-07-10T00:47:39.282927Z"}], "thread_id": "Thread-5", "execution_time": 0.740339994430542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__product_2", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__product_2_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    display_url\n    \n as \n    \n    display_url\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    family\n    \n as \n    \n    family\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_active\n    \n as \n    \n    is_active\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    number_of_quantity_installments\n    \n as \n    \n    number_of_quantity_installments\n    \n, \n    \n    \n    number_of_revenue_installments\n    \n as \n    \n    number_of_revenue_installments\n    \n, \n    \n    \n    product_code\n    \n as \n    \n    product_code\n    \n, \n    \n    \n    quantity_installment_period\n    \n as \n    \n    quantity_installment_period\n    \n, \n    \n    \n    quantity_schedule_type\n    \n as \n    \n    quantity_schedule_type\n    \n, \n    \n    \n    quantity_unit_of_measure\n    \n as \n    \n    quantity_unit_of_measure\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    revenue_installment_period\n    \n as \n    \n    revenue_installment_period\n    \n, \n    \n    \n    revenue_schedule_type\n    \n as \n    \n    revenue_schedule_type\n    \n, \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as TEXT) as \n    \n    DisplayUrl\n    \n , \n    cast(null as TEXT) as \n    \n    ExternalId\n    \n , \n    cast(null as boolean) as \n    \n    IsActive\n    \n , \n    cast(null as boolean) as \n    \n    IsArchived\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as integer) as \n    \n    NumberOfQuantityInstallments\n    \n , \n    cast(null as integer) as \n    \n    NumberOfRevenueInstallments\n    \n , \n    cast(null as TEXT) as \n    \n    ProductCode\n    \n , \n    cast(null as TEXT) as \n    \n    QuantityInstallmentPeriod\n    \n , \n    cast(null as TEXT) as \n    \n    QuantityScheduleType\n    \n , \n    cast(null as TEXT) as \n    \n    QuantityUnitOfMeasure\n    \n , \n    cast(null as TEXT) as \n    \n    RecordTypeId\n    \n , \n    cast(null as TEXT) as \n    \n    RevenueInstallmentPeriod\n    \n , \n    cast(null as TEXT) as \n    \n    RevenueScheduleType\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_product_2_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as product_2_id,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as product_2_description,\n        \n\n\n    coalesce(cast(DisplayUrl as TEXT),\n        cast(display_url as TEXT))\n        as display_url,\n        \n\n\n    coalesce(cast(ExternalId as TEXT),\n        cast(external_id as TEXT))\n        as external_id,\n        \n\n\n    cast(Family as TEXT) as family,\n        \n\n\n    coalesce(cast(IsActive as boolean),\n        cast(is_active as boolean))\n        as is_active,\n        \n\n\n    coalesce(cast(IsArchived as boolean),\n        cast(is_archived as boolean))\n        as is_archived,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    cast(Name as TEXT) as product_2_name,\n        \n\n\n    coalesce(cast(NumberOfQuantityInstallments as integer),\n        cast(number_of_quantity_installments as integer))\n        as number_of_quantity_installments,\n        \n\n\n    coalesce(cast(NumberOfRevenueInstallments as integer),\n        cast(number_of_revenue_installments as integer))\n        as number_of_revenue_installments,\n        \n\n\n    coalesce(cast(ProductCode as TEXT),\n        cast(product_code as TEXT))\n        as product_code,\n        \n\n\n    coalesce(cast(QuantityInstallmentPeriod as TEXT),\n        cast(quantity_installment_period as TEXT))\n        as quantity_installment_period,\n        \n\n\n    coalesce(cast(QuantityScheduleType as TEXT),\n        cast(quantity_schedule_type as TEXT))\n        as quantity_schedule_type,\n        \n\n\n    coalesce(cast(QuantityUnitOfMeasure as TEXT),\n        cast(quantity_unit_of_measure as TEXT))\n        as quantity_unit_of_measure,\n        \n\n\n    coalesce(cast(RecordTypeId as TEXT),\n        cast(record_type_id as TEXT))\n        as record_type_id,\n        \n\n\n    coalesce(cast(RevenueInstallmentPeriod as TEXT),\n        cast(revenue_installment_period as TEXT))\n        as revenue_installment_period,\n        \n\n\n    coalesce(cast(RevenueScheduleType as TEXT),\n        cast(revenue_schedule_type as TEXT))\n        as revenue_schedule_type\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__product_2\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.597190Z", "completed_at": "2024-07-10T00:47:39.300311Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.300595Z", "completed_at": "2024-07-10T00:47:39.300600Z"}], "thread_id": "Thread-2", "execution_time": 0.7628726959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__opportunity_line_item", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__opportunity_line_item_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discount\n    \n as \n    \n    discount\n    \n, \n    \n    \n    has_quantity_schedule\n    \n as \n    \n    has_quantity_schedule\n    \n, \n    \n    \n    has_revenue_schedule\n    \n as \n    \n    has_revenue_schedule\n    \n, \n    \n    \n    has_schedule\n    \n as \n    \n    has_schedule\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    list_price\n    \n as \n    \n    list_price\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    opportunity_id\n    \n as \n    \n    opportunity_id\n    \n, \n    \n    \n    pricebook_entry_id\n    \n as \n    \n    pricebook_entry_id\n    \n, \n    \n    \n    product_2_id\n    \n as \n    \n    product_2_id\n    \n, \n    \n    \n    product_code\n    \n as \n    \n    product_code\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    service_date\n    \n as \n    \n    service_date\n    \n, \n    \n    \n    sort_order\n    \n as \n    \n    sort_order\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    unit_price\n    \n as \n    \n    unit_price\n    \n, \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as boolean) as \n    \n    HasQuantitySchedule\n    \n , \n    cast(null as boolean) as \n    \n    HasRevenueSchedule\n    \n , \n    cast(null as boolean) as \n    \n    HasSchedule\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as float) as \n    \n    ListPrice\n    \n , \n    cast(null as TEXT) as \n    \n    OpportunityId\n    \n , \n    cast(null as TEXT) as \n    \n    PricebookEntryId\n    \n , \n    cast(null as TEXT) as \n    \n    Product2Id\n    \n , \n    cast(null as TEXT) as \n    \n    ProductCode\n    \n , \n    cast(null as timestamp) as \n    \n    ServiceDate\n    \n , \n    cast(null as integer) as \n    \n    SortOrder\n    \n , \n    cast(null as float) as \n    \n    TotalPrice\n    \n , \n    cast(null as float) as \n    \n    UnitPrice\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_opportunity_line_item_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as opportunity_line_item_id,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as opportunity_line_item_description,\n        \n\n\n    cast(Discount as float) as discount,\n        \n\n\n    coalesce(cast(HasQuantitySchedule as boolean),\n        cast(has_quantity_schedule as boolean))\n        as has_quantity_schedule,\n        \n\n\n    coalesce(cast(HasRevenueSchedule as boolean),\n        cast(has_revenue_schedule as boolean))\n        as has_revenue_schedule,\n        \n\n\n    coalesce(cast(HasSchedule as boolean),\n        cast(has_schedule as boolean))\n        as has_schedule,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(ListPrice as numeric(28,6)),\n        cast(list_price as numeric(28,6)))\n        as list_price,\n        \n\n\n    cast(Name as TEXT) as opportunity_line_item_name,\n        \n\n\n    coalesce(cast(OpportunityId as TEXT),\n        cast(opportunity_id as TEXT))\n        as opportunity_id,\n        \n\n\n    coalesce(cast(PricebookEntryId as TEXT),\n        cast(pricebook_entry_id as TEXT))\n        as pricebook_entry_id,\n        \n\n\n    coalesce(cast(Product2Id as TEXT),\n        cast(product_2_id as TEXT))\n        as product_2_id,\n        \n\n\n    coalesce(cast(ProductCode as TEXT),\n        cast(product_code as TEXT))\n        as product_code,\n        \n\n\n    cast(Quantity as float) as quantity,\n        \n\n\n    coalesce(cast(ServiceDate as timestamp),\n        cast(service_date as timestamp))\n        as service_date,\n        \n\n\n    coalesce(cast(SortOrder as integer),\n        cast(sort_order as integer))\n        as sort_order,\n        \n\n\n    coalesce(cast(TotalPrice as numeric(28,6)),\n        cast(total_price as numeric(28,6)))\n        as total_price,\n        \n\n\n    coalesce(cast(UnitPrice as numeric(28,6)),\n        cast(unit_price as numeric(28,6)))\n        as unit_price\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_line_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.355308Z", "completed_at": "2024-07-10T00:47:39.360929Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.361576Z", "completed_at": "2024-07-10T00:47:39.361580Z"}], "thread_id": "Thread-5", "execution_time": 0.008058786392211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.dbt_utils_unique_combination_of_columns_stg_salesforce__contact_history_contact_id___fivetran_start___fivetran_end.2d7ff092ee", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        contact_id, _fivetran_start, _fivetran_end\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\"\n    group by contact_id, _fivetran_start, _fivetran_end\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.365920Z", "completed_at": "2024-07-10T00:47:39.369605Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.369912Z", "completed_at": "2024-07-10T00:47:39.369917Z"}], "thread_id": "Thread-5", "execution_time": 0.0046269893646240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__contact_history_history_unique_key.673cb181cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect history_unique_key\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\"\nwhere history_unique_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.362470Z", "completed_at": "2024-07-10T00:47:39.370586Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.371104Z", "completed_at": "2024-07-10T00:47:39.371107Z"}], "thread_id": "Thread-2", "execution_time": 0.009852886199951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__account_account_id.1e0ff361d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.760916Z", "completed_at": "2024-07-10T00:47:39.310926Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.311203Z", "completed_at": "2024-07-10T00:47:39.311210Z"}], "thread_id": "Thread-1", "execution_time": 0.616206169128418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__user_role", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__user_role_enabled within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    developer_name\n    \n as \n    \n    developer_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    opportunity_access_for_account_owner\n    \n as \n    \n    opportunity_access_for_account_owner\n    \n, \n    \n    \n    parent_role_id\n    \n as \n    \n    parent_role_id\n    \n, \n    \n    \n    rollup_description\n    \n as \n    \n    rollup_description\n    \n, \n    cast(null as TEXT) as \n    \n    DeveloperName\n    \n , \n    cast(null as TEXT) as \n    \n    OpportunityAccessForAccountOwner\n    \n , \n    cast(null as TEXT) as \n    \n    ParentRoleId\n    \n , \n    cast(null as TEXT) as \n    \n    RollupDescription\n    \n \n\n\n\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_user_role_data\"\n), \n\nfinal as (\n\n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    coalesce(cast(DeveloperName as TEXT),\n        cast(developer_name as TEXT))\n        as developer_name,\n        \n\n\n    cast(Id as TEXT) as user_role_id,\n        \n\n\n    cast(Name as TEXT) as user_role_name,\n        \n\n\n    coalesce(cast(OpportunityAccessForAccountOwner as TEXT),\n        cast(opportunity_access_for_account_owner as TEXT))\n        as opportunity_access_for_account_owner,\n        \n\n\n    coalesce(cast(ParentRoleId as TEXT),\n        cast(parent_role_id as TEXT))\n        as parent_role_id,\n        \n\n\n    coalesce(cast(RollupDescription as TEXT),\n        cast(rollup_description as TEXT))\n        as rollup_description\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user_role\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.371981Z", "completed_at": "2024-07-10T00:47:39.379799Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.380438Z", "completed_at": "2024-07-10T00:47:39.380444Z"}], "thread_id": "Thread-5", "execution_time": 0.009661197662353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__event_event_id.e964b30db8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__event\"\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.376380Z", "completed_at": "2024-07-10T00:47:39.381257Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.384908Z", "completed_at": "2024-07-10T00:47:39.384914Z"}], "thread_id": "Thread-2", "execution_time": 0.00968027114868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__account_account_id.6d58a39ba7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account\"\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.381870Z", "completed_at": "2024-07-10T00:47:39.389354Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.393164Z", "completed_at": "2024-07-10T00:47:39.393170Z"}], "thread_id": "Thread-1", "execution_time": 0.013130903244018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__contact_history_history_unique_key.215181e10d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    history_unique_key as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\"\nwhere history_unique_key is not null\ngroup by history_unique_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.386293Z", "completed_at": "2024-07-10T00:47:39.394223Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.394841Z", "completed_at": "2024-07-10T00:47:39.394845Z"}], "thread_id": "Thread-5", "execution_time": 0.009603261947631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__event_event_id.13f7c8c0d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__event\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.389602Z", "completed_at": "2024-07-10T00:47:39.394638Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.397974Z", "completed_at": "2024-07-10T00:47:39.397980Z"}], "thread_id": "Thread-2", "execution_time": 0.012000083923339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity\"\nwhere opportunity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.395182Z", "completed_at": "2024-07-10T00:47:39.399941Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.406363Z", "completed_at": "2024-07-10T00:47:39.406371Z"}], "thread_id": "Thread-1", "execution_time": 0.012495756149291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    opportunity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity\"\nwhere opportunity_id is not null\ngroup by opportunity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.400137Z", "completed_at": "2024-07-10T00:47:39.410859Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.411446Z", "completed_at": "2024-07-10T00:47:39.411453Z"}], "thread_id": "Thread-5", "execution_time": 0.01256704330444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__contact_contact_id.d7c02bef78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.403324Z", "completed_at": "2024-07-10T00:47:39.411172Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.411898Z", "completed_at": "2024-07-10T00:47:39.411901Z"}], "thread_id": "Thread-2", "execution_time": 0.012701988220214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__contact_contact_id.0cc2c0609e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    contact_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact\"\nwhere contact_id is not null\ngroup by contact_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.407974Z", "completed_at": "2024-07-10T00:47:39.412902Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.413632Z", "completed_at": "2024-07-10T00:47:39.413637Z"}], "thread_id": "Thread-1", "execution_time": 0.006417751312255859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__lead_lead_id.e2ba6b2026", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lead_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__lead\"\nwhere lead_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.736558Z", "completed_at": "2024-07-10T00:47:39.354795Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.359332Z", "completed_at": "2024-07-10T00:47:39.359338Z"}], "thread_id": "Thread-4", "execution_time": 0.6918787956237793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__user", "compiled": true, "compiled_code": "with fields as (\n\n    select\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company_name\n    \n as \n    \n    company_name\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    individual_id\n    \n as \n    \n    individual_id\n    \n, \n    \n    \n    is_active\n    \n as \n    \n    is_active\n    \n, \n    \n    \n    last_login_date\n    \n as \n    \n    last_login_date\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    manager_id\n    \n as \n    \n    manager_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    postal_code\n    \n as \n    \n    postal_code\n    \n, \n    \n    \n    profile_id\n    \n as \n    \n    profile_id\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    state_code\n    \n as \n    \n    state_code\n    \n, \n    \n    \n    street\n    \n as \n    \n    street\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    user_role_id\n    \n as \n    \n    user_role_id\n    \n, \n    \n    \n    user_type\n    \n as \n    \n    user_type\n    \n, \n    \n    \n    username\n    \n as \n    \n    username\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as TEXT) as \n    \n    CompanyName\n    \n , \n    cast(null as TEXT) as \n    \n    ContactId\n    \n , \n    cast(null as TEXT) as \n    \n    CountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    FirstName\n    \n , \n    cast(null as TEXT) as \n    \n    IndividualId\n    \n , \n    cast(null as boolean) as \n    \n    IsActive\n    \n , \n    cast(null as timestamp) as \n    \n    LastLoginDate\n    \n , \n    cast(null as TEXT) as \n    \n    LastName\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    ManagerId\n    \n , \n    cast(null as TEXT) as \n    \n    PostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    ProfileId\n    \n , \n    cast(null as TEXT) as \n    \n    StateCode\n    \n , \n    cast(null as TEXT) as \n    \n    UserRoleId\n    \n , \n    cast(null as TEXT) as \n    \n    UserType\n    \n \n\n\n\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_user_data\"\n), \n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    cast(Alias as TEXT) as alias,\n        \n\n\n    cast(City as TEXT) as city,\n        \n\n\n    coalesce(cast(CompanyName as TEXT),\n        cast(company_name as TEXT))\n        as company_name,\n        \n\n\n    coalesce(cast(ContactId as TEXT),\n        cast(contact_id as TEXT))\n        as contact_id,\n        \n\n\n    cast(Country as TEXT) as country,\n        \n\n\n    coalesce(cast(CountryCode as TEXT),\n        cast(country_code as TEXT))\n        as country_code,\n        \n\n\n    cast(Department as TEXT) as department,\n        \n\n\n    cast(Email as TEXT) as email,\n        \n\n\n    coalesce(cast(FirstName as TEXT),\n        cast(first_name as TEXT))\n        as first_name,\n        \n\n\n    cast(Id as TEXT) as user_id,\n        \n\n\n    coalesce(cast(IndividualId as TEXT),\n        cast(individual_id as TEXT))\n        as individual_id,\n        \n\n\n    coalesce(cast(IsActive as boolean),\n        cast(is_active as boolean))\n        as is_active,\n        \n\n\n    coalesce(cast(LastLoginDate as timestamp),\n        cast(last_login_date as timestamp))\n        as last_login_date,\n        \n\n\n    coalesce(cast(LastName as TEXT),\n        cast(last_name as TEXT))\n        as last_name,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(ManagerId as TEXT),\n        cast(manager_id as TEXT))\n        as manager_id,\n        \n\n\n    cast(Name as TEXT) as user_name,\n        \n\n\n    coalesce(cast(PostalCode as TEXT),\n        cast(postal_code as TEXT))\n        as postal_code,\n        \n\n\n    coalesce(cast(ProfileId as TEXT),\n        cast(profile_id as TEXT))\n        as profile_id,\n        \n\n\n    cast(State as TEXT) as state,\n        \n\n\n    coalesce(cast(StateCode as TEXT),\n        cast(state_code as TEXT))\n        as state_code,\n        \n\n\n    cast(Street as TEXT) as street,\n        \n\n\n    cast(Title as TEXT) as title,\n        \n\n\n    coalesce(cast(UserRoleId as TEXT),\n        cast(user_role_id as TEXT))\n        as user_role_id,\n        \n\n\n    coalesce(cast(UserType as TEXT),\n        cast(user_type as TEXT))\n        as user_type,\n        \n\n\n    cast(Username as TEXT) as username\n        \n        \n\n\n\n\n    \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.414694Z", "completed_at": "2024-07-10T00:47:39.430422Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.435012Z", "completed_at": "2024-07-10T00:47:39.435020Z"}], "thread_id": "Thread-5", "execution_time": 0.021996021270751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__lead_lead_id.ba8b21e282", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    lead_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__lead\"\nwhere lead_id is not null\ngroup by lead_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.676798Z", "completed_at": "2024-07-10T00:47:39.358878Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.360216Z", "completed_at": "2024-07-10T00:47:39.360220Z"}], "thread_id": "Thread-8", "execution_time": 0.7609479427337646, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__task", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__task_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    call_disposition\n    \n as \n    \n    call_disposition\n    \n, \n    \n    \n    call_duration_in_seconds\n    \n as \n    \n    call_duration_in_seconds\n    \n, \n    \n    \n    call_object\n    \n as \n    \n    call_object\n    \n, \n    \n    \n    call_type\n    \n as \n    \n    call_type\n    \n, \n    \n    \n    completed_date_time\n    \n as \n    \n    completed_date_time\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_closed\n    \n as \n    \n    is_closed\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_high_priority\n    \n as \n    \n    is_high_priority\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    task_subtype\n    \n as \n    \n    task_subtype\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    what_count\n    \n as \n    \n    what_count\n    \n, \n    \n    \n    what_id\n    \n as \n    \n    what_id\n    \n, \n    \n    \n    who_count\n    \n as \n    \n    who_count\n    \n, \n    \n    \n    who_id\n    \n as \n    \n    who_id\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as timestamp) as \n    \n    ActivityDate\n    \n , \n    cast(null as TEXT) as \n    \n    CallDisposition\n    \n , \n    cast(null as integer) as \n    \n    CallDurationInSeconds\n    \n , \n    cast(null as TEXT) as \n    \n    CallObject\n    \n , \n    cast(null as TEXT) as \n    \n    CallType\n    \n , \n    cast(null as timestamp) as \n    \n    CompletedDateTime\n    \n , \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as boolean) as \n    \n    IsArchived\n    \n , \n    cast(null as boolean) as \n    \n    IsClosed\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as boolean) as \n    \n    IsHighPriority\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    RecordTypeId\n    \n , \n    cast(null as TEXT) as \n    \n    TaskSubtype\n    \n , \n    cast(null as integer) as \n    \n    WhatCount\n    \n , \n    cast(null as TEXT) as \n    \n    WhatId\n    \n , \n    cast(null as integer) as \n    \n    WhoCount\n    \n , \n    cast(null as TEXT) as \n    \n    WhoId\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_task_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as task_id,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    coalesce(cast(ActivityDate as timestamp),\n        cast(activity_date as timestamp))\n        as activity_date,\n        \n\n\n    coalesce(cast(CallDisposition as TEXT),\n        cast(call_disposition as TEXT))\n        as call_disposition,\n        \n\n\n    coalesce(cast(CallDurationInSeconds as integer),\n        cast(call_duration_in_seconds as integer))\n        as call_duration_in_seconds,\n        \n\n\n    coalesce(cast(CallObject as TEXT),\n        cast(call_object as TEXT))\n        as call_object,\n        \n\n\n    coalesce(cast(CallType as TEXT),\n        cast(call_type as TEXT))\n        as call_type,\n        \n\n\n    coalesce(cast(CompletedDateTime as timestamp),\n        cast(completed_date_time as timestamp))\n        as completed_date_time,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as task_description,\n        \n\n\n    coalesce(cast(IsArchived as boolean),\n        cast(is_archived as boolean))\n        as is_archived,\n        \n\n\n    coalesce(cast(IsClosed as boolean),\n        cast(is_closed as boolean))\n        as is_closed,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(IsHighPriority as boolean),\n        cast(is_high_priority as boolean))\n        as is_high_priority,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    cast(Priority as TEXT) as priority,\n        \n\n\n    coalesce(cast(RecordTypeId as TEXT),\n        cast(record_type_id as TEXT))\n        as record_type_id,\n        \n\n\n    cast(Status as TEXT) as status,\n        \n\n\n    cast(Subject as TEXT) as subject,\n        \n\n\n    coalesce(cast(TaskSubtype as TEXT),\n        cast(task_subtype as TEXT))\n        as task_subtype,\n        \n\n\n    cast(Type as TEXT) as type,\n        \n\n\n    coalesce(cast(WhatCount as integer),\n        cast(what_count as integer))\n        as what_count,\n        \n\n\n    coalesce(cast(WhatId as TEXT),\n        cast(what_id as TEXT))\n        as what_id,\n        \n\n\n    coalesce(cast(WhoCount as integer),\n        cast(who_count as integer))\n        as who_count,\n        \n\n\n    coalesce(cast(WhoId as TEXT),\n        cast(who_id as TEXT))\n        as who_id\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.605633Z", "completed_at": "2024-07-10T00:47:39.359087Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.360428Z", "completed_at": "2024-07-10T00:47:39.360431Z"}], "thread_id": "Thread-6", "execution_time": 0.8316590785980225, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__order", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__order_enabled within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activated_by_id\n    \n as \n    \n    activated_by_id\n    \n, \n    \n    \n    activated_date\n    \n as \n    \n    activated_date\n    \n, \n    \n    \n    billing_city\n    \n as \n    \n    billing_city\n    \n, \n    \n    \n    billing_country\n    \n as \n    \n    billing_country\n    \n, \n    \n    \n    billing_country_code\n    \n as \n    \n    billing_country_code\n    \n, \n    \n    \n    billing_postal_code\n    \n as \n    \n    billing_postal_code\n    \n, \n    \n    \n    billing_state\n    \n as \n    \n    billing_state\n    \n, \n    \n    \n    billing_state_code\n    \n as \n    \n    billing_state_code\n    \n, \n    \n    \n    billing_street\n    \n as \n    \n    billing_street\n    \n, \n    \n    \n    contract_id\n    \n as \n    \n    contract_id\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    opportunity_id\n    \n as \n    \n    opportunity_id\n    \n, \n    \n    \n    order_number\n    \n as \n    \n    order_number\n    \n, \n    \n    \n    original_order_id\n    \n as \n    \n    original_order_id\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    pricebook_2_id\n    \n as \n    \n    pricebook_2_id\n    \n, \n    \n    \n    shipping_city\n    \n as \n    \n    shipping_city\n    \n, \n    \n    \n    shipping_country\n    \n as \n    \n    shipping_country\n    \n, \n    \n    \n    shipping_country_code\n    \n as \n    \n    shipping_country_code\n    \n, \n    \n    \n    shipping_postal_code\n    \n as \n    \n    shipping_postal_code\n    \n, \n    \n    \n    shipping_state\n    \n as \n    \n    shipping_state\n    \n, \n    \n    \n    shipping_state_code\n    \n as \n    \n    shipping_state_code\n    \n, \n    \n    \n    shipping_street\n    \n as \n    \n    shipping_street\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    total_amount\n    \n as \n    \n    total_amount\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    cast(null as TEXT) as \n    \n    AccountId\n    \n , \n    cast(null as TEXT) as \n    \n    ActivatedById\n    \n , \n    cast(null as timestamp) as \n    \n    ActivatedDate\n    \n , \n    cast(null as TEXT) as \n    \n    BillingCity\n    \n , \n    cast(null as TEXT) as \n    \n    BillingCountry\n    \n , \n    cast(null as TEXT) as \n    \n    BillingCountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    BillingPostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    BillingState\n    \n , \n    cast(null as TEXT) as \n    \n    BillingStateCode\n    \n , \n    cast(null as TEXT) as \n    \n    BillingStreet\n    \n , \n    cast(null as TEXT) as \n    \n    ContractId\n    \n , \n    cast(null as TEXT) as \n    \n    CreatedById\n    \n , \n    cast(null as timestamp) as \n    \n    CreatedDate\n    \n , \n    cast(null as timestamp) as \n    \n    EndDate\n    \n , \n    cast(null as boolean) as \n    \n    IsDeleted\n    \n , \n    cast(null as TEXT) as \n    \n    LastModifiedById\n    \n , \n    cast(null as timestamp) as \n    \n    LastModifiedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastReferencedDate\n    \n , \n    cast(null as timestamp) as \n    \n    LastViewedDate\n    \n , \n    cast(null as TEXT) as \n    \n    OpportunityId\n    \n , \n    cast(null as TEXT) as \n    \n    OrderNumber\n    \n , \n    cast(null as TEXT) as \n    \n    OriginalOrderId\n    \n , \n    cast(null as TEXT) as \n    \n    OwnerId\n    \n , \n    cast(null as TEXT) as \n    \n    Pricebook2Id\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCity\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCountry\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingCountryCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingPostalCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingState\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingStateCode\n    \n , \n    cast(null as TEXT) as \n    \n    ShippingStreet\n    \n , \n    cast(null as float) as \n    \n    TotalAmount\n    \n \n\n\n        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"sf_order_data\"\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        \n\n\n    cast(Id as TEXT) as order_id,\n        \n\n\n    coalesce(cast(AccountId as TEXT),\n        cast(account_id as TEXT))\n        as account_id,\n        \n\n\n    coalesce(cast(ActivatedById as TEXT),\n        cast(activated_by_id as TEXT))\n        as activated_by_id,\n        \n\n\n    coalesce(cast(ActivatedDate as timestamp),\n        cast(activated_date as timestamp))\n        as activated_date,\n        \n\n\n    coalesce(cast(BillingCity as TEXT),\n        cast(billing_city as TEXT))\n        as billing_city,\n        \n\n\n    coalesce(cast(BillingCountry as TEXT),\n        cast(billing_country as TEXT))\n        as billing_country,\n        \n\n\n    coalesce(cast(BillingCountryCode as TEXT),\n        cast(billing_country_code as TEXT))\n        as billing_country_code,\n        \n\n\n    coalesce(cast(BillingPostalCode as TEXT),\n        cast(billing_postal_code as TEXT))\n        as billing_postal_code,\n        \n\n\n    coalesce(cast(BillingState as TEXT),\n        cast(billing_state as TEXT))\n        as billing_state,\n        \n\n\n    coalesce(cast(BillingStateCode as TEXT),\n        cast(billing_state_code as TEXT))\n        as billing_state_code,\n        \n\n\n    coalesce(cast(BillingStreet as TEXT),\n        cast(billing_street as TEXT))\n        as billing_street,\n        \n\n\n    coalesce(cast(ContractId as TEXT),\n        cast(contract_id as TEXT))\n        as contract_id,\n        \n\n\n    coalesce(cast(CreatedById as TEXT),\n        cast(created_by_id as TEXT))\n        as created_by_id,\n        \n\n\n    coalesce(cast(CreatedDate as timestamp),\n        cast(created_date as timestamp))\n        as created_date,\n        \n\n\n    cast(Description as TEXT) as order_description,\n        \n\n\n    coalesce(cast(EndDate as timestamp),\n        cast(end_date as timestamp))\n        as end_date,\n        \n\n\n    coalesce(cast(IsDeleted as boolean),\n        cast(is_deleted as boolean))\n        as is_deleted,\n        \n\n\n    coalesce(cast(LastModifiedById as TEXT),\n        cast(last_modified_by_id as TEXT))\n        as last_modified_by_id,\n        \n\n\n    coalesce(cast(LastModifiedDate as timestamp),\n        cast(last_modified_date as timestamp))\n        as last_modified_date,\n        \n\n\n    coalesce(cast(LastReferencedDate as timestamp),\n        cast(last_referenced_date as timestamp))\n        as last_referenced_date,\n        \n\n\n    coalesce(cast(LastViewedDate as timestamp),\n        cast(last_viewed_date as timestamp))\n        as last_viewed_date,\n        \n\n\n    coalesce(cast(OpportunityId as TEXT),\n        cast(opportunity_id as TEXT))\n        as opportunity_id,\n        \n\n\n    coalesce(cast(OrderNumber as TEXT),\n        cast(order_number as TEXT))\n        as order_number,\n        \n\n\n    coalesce(cast(OriginalOrderId as TEXT),\n        cast(original_order_id as TEXT))\n        as original_order_id,\n        \n\n\n    coalesce(cast(OwnerId as TEXT),\n        cast(owner_id as TEXT))\n        as owner_id,\n        \n\n\n    coalesce(cast(Pricebook2Id as TEXT),\n        cast(pricebook_2_id as TEXT))\n        as pricebook_2_id,\n        \n\n\n    coalesce(cast(ShippingCity as TEXT),\n        cast(shipping_city as TEXT))\n        as shipping_city,\n        \n\n\n    coalesce(cast(ShippingCountry as TEXT),\n        cast(shipping_country as TEXT))\n        as shipping_country,\n        \n\n\n    coalesce(cast(ShippingCountryCode as TEXT),\n        cast(shipping_country_code as TEXT))\n        as shipping_country_code,\n        \n\n\n    coalesce(cast(ShippingPostalCode as TEXT),\n        cast(shipping_postal_code as TEXT))\n        as shipping_postal_code,\n        \n\n\n    coalesce(cast(ShippingState as TEXT),\n        cast(shipping_state as TEXT))\n        as shipping_state,\n        \n\n\n    coalesce(cast(ShippingStateCode as TEXT),\n        cast(shipping_state_code as TEXT))\n        as shipping_state_code,\n        \n\n\n    coalesce(cast(ShippingStreet as TEXT),\n        cast(shipping_street as TEXT))\n        as shipping_street,\n        \n\n\n    cast(Status as TEXT) as status,\n        \n\n\n    coalesce(cast(TotalAmount as numeric(28,6)),\n        cast(total_amount as numeric(28,6)))\n        as total_amount,\n        \n\n\n    cast(Type as TEXT) as type\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__order\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.430829Z", "completed_at": "2024-07-10T00:47:39.437435Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.439124Z", "completed_at": "2024-07-10T00:47:39.439128Z"}], "thread_id": "Thread-1", "execution_time": 0.012738943099975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.dbt_utils_unique_combination_of_columns_stg_salesforce__opportunity_history_opportunity_id___fivetran_start___fivetran_end.1209811435", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        opportunity_id, _fivetran_start, _fivetran_end\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\"\n    group by opportunity_id, _fivetran_start, _fivetran_end\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.439902Z", "completed_at": "2024-07-10T00:47:39.488342Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.491696Z", "completed_at": "2024-07-10T00:47:39.491704Z"}], "thread_id": "Thread-4", "execution_time": 0.05520486831665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__opportunity_history_history_unique_key.32fa6270e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect history_unique_key\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\"\nwhere history_unique_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.488579Z", "completed_at": "2024-07-10T00:47:39.498731Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.499773Z", "completed_at": "2024-07-10T00:47:39.499779Z"}], "thread_id": "Thread-6", "execution_time": 0.05685997009277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__product_2_product_2_id.b4bc489d61", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_2_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__product_2\"\nwhere product_2_id is not null\ngroup by product_2_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.444331Z", "completed_at": "2024-07-10T00:47:39.498984Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.500177Z", "completed_at": "2024-07-10T00:47:39.500180Z"}], "thread_id": "Thread-5", "execution_time": 0.06137895584106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__opportunity_history_history_unique_key.b5b08bda67", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    history_unique_key as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\"\nwhere history_unique_key is not null\ngroup by history_unique_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.448147Z", "completed_at": "2024-07-10T00:47:39.499171Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.500565Z", "completed_at": "2024-07-10T00:47:39.500569Z"}], "thread_id": "Thread-8", "execution_time": 0.06105685234069824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__product_2_product_2_id.84aed29e8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_2_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__product_2\"\nwhere product_2_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.492279Z", "completed_at": "2024-07-10T00:47:39.501149Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.505331Z", "completed_at": "2024-07-10T00:47:39.505340Z"}], "thread_id": "Thread-1", "execution_time": 0.057562828063964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__opportunity_line_item_enhanced", "compiled": true, "compiled_code": "--This model will only run if you have the underlying opportunity line item table.\n\nwith opportunity_line_item as (\n    \n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_line_item\"\n),\n\n-- If using product_2 table, the following will be included, otherwise it will not.\n\nproduct_2 as (\n\n    select * \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__product_2\"\n),\n\n\n\nfinal as (\n\n    select\n        oli.opportunity_line_item_id,\n        oli.opportunity_line_item_name,\n        oli.opportunity_line_item_description,\n        oli.opportunity_id,\n        row_number() over (partition by oli.opportunity_id order by oli.created_date) as line_item_index,\n        count(opportunity_line_item_id) over (partition by oli.opportunity_id) as total_line_items,\n        oli.created_date,\n        oli.last_modified_date,\n        oli.service_date,\n        oli.pricebook_entry_id,\n        oli.product_2_id,\n        oli.list_price,\n        oli.quantity,\n        oli.unit_price,\n        oli.total_price,\n        oli.has_quantity_schedule,\n        oli.has_revenue_schedule\n\n        \n        ,\n        product_2.product_2_name,\n        product_2.product_code,\n        product_2.product_2_description,\n        product_2.external_id as product_external_id,\n        product_2.family as product_family,\n        product_2.is_active as product_is_active,\n        product_2.is_archived as product_is_archived,\n        product_2.is_deleted as product_is_deleted,\n        product_2.number_of_quantity_installments as product_number_of_quantity_installments,\n        product_2.quantity_installment_period as product_quantity_installment_period,\n        product_2.quantity_schedule_type as product_quantity_schedule_type,\n        product_2.quantity_unit_of_measure as product_quantity_unit_of_measure,\n        product_2.number_of_revenue_installments as product_number_of_revenue_installments,\n        product_2.revenue_installment_period as product_revenue_installment_period,\n        product_2.revenue_schedule_type as product_revenue_schedule_type\n        \n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n\n        \n        \n\n\n\n\n        \n\n    from opportunity_line_item as oli\n\n    \n    left join product_2\n        on oli.product_2_id = product_2.product_2_id\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_line_item_enhanced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:38.811753Z", "completed_at": "2024-07-10T00:47:39.435819Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.437695Z", "completed_at": "2024-07-10T00:47:39.437700Z"}], "thread_id": "Thread-7", "execution_time": 0.6960318088531494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__account_daily_history", "compiled": true, "compiled_code": "\n\n\n    \n\n    \n\n    \n    \n\n\nwith spine as (\n    \n    \n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1652\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2020-01-01'as date) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2024-07-10'as date)\n\n)\n\nselect * from filtered\n\n\n),\n\naccount_history as (\n\n    select *        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account_history\"\n     \n),\n\norder_daily_values as (\n\n    select \n        *,\n        row_number() over (\n            partition by _fivetran_date, account_id\n            order by _fivetran_start desc) as row_num    \n    from account_history  \n),\n\nget_latest_daily_value as (\n\n    select * \n    from order_daily_values\n    where row_num = 1\n),\n\ndaily_history as (\n\n    select \n        md5(cast(coalesce(cast(spine.date_day as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(get_latest_daily_value.account_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as account_day_id,\n        cast(spine.date_day as date) as date_day,\n        get_latest_daily_value.*\n    from get_latest_daily_value\n    join spine on get_latest_daily_value._fivetran_start <= cast(spine.date_day as timestamp)\n        and get_latest_daily_value._fivetran_end >= cast(spine.date_day as timestamp)\n)\n\nselect * \nfrom daily_history", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__account_daily_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.502133Z", "completed_at": "2024-07-10T00:47:39.507861Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.515175Z", "completed_at": "2024-07-10T00:47:39.515180Z"}], "thread_id": "Thread-4", "execution_time": 0.01582503318786621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item_id.b5d2465072", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_line_item_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_line_item\"\nwhere opportunity_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.508457Z", "completed_at": "2024-07-10T00:47:39.522720Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.523828Z", "completed_at": "2024-07-10T00:47:39.523833Z"}], "thread_id": "Thread-6", "execution_time": 0.01795196533203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__opportunity_line_item_opportunity_line_item_id.c18042d902", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    opportunity_line_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_line_item\"\nwhere opportunity_line_item_id is not null\ngroup by opportunity_line_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.511714Z", "completed_at": "2024-07-10T00:47:39.523126Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.531594Z", "completed_at": "2024-07-10T00:47:39.531598Z"}], "thread_id": "Thread-5", "execution_time": 0.025470972061157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__user_role_user_role_id.949036e9bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_role_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user_role\"\nwhere user_role_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.515546Z", "completed_at": "2024-07-10T00:47:39.523634Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.532221Z", "completed_at": "2024-07-10T00:47:39.532224Z"}], "thread_id": "Thread-8", "execution_time": 0.02584099769592285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__user_role_user_role_id.1259050718", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_role_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user_role\"\nwhere user_role_id is not null\ngroup by user_role_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.518959Z", "completed_at": "2024-07-10T00:47:39.530476Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.532843Z", "completed_at": "2024-07-10T00:47:39.532846Z"}], "thread_id": "Thread-1", "execution_time": 0.02466893196105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__contact_enhanced", "compiled": true, "compiled_code": "with contact as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact\"\n), \n\naccount as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account\"\n),\n\nsalesforce_user as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\n)\n\nselect \n    contact.contact_id,\n    contact.contact_name,\n    contact.account_id,\n    contact.department,\n    contact.contact_description,\n    contact.email,\n    contact.individual_id,\n    contact.is_deleted as contact_is_deleted,\n    contact.last_activity_date,\n    contact.lead_source,\n    contact.mailing_city,\n    contact.mailing_country,\n    contact.mailing_country_code,\n    contact.mailing_postal_code,\n    contact.mailing_state,\n    contact.mailing_state_code,\n    contact.mailing_street,\n    contact.master_record_id,\n    contact.mobile_phone,\n    contact.owner_id as contact_owner_id,\n    contact.phone,\n    contact.reports_to_id,\n    salesforce_user.user_name as contact_owner_name,\n    account.account_name,\n    account.account_number,\n    account.account_source,\n    account.annual_revenue as account_annual_revenue,\n    account.account_description,\n    account.industry as account_industry,\n    account.is_deleted as account_is_deleted,\n    account.number_of_employees as account_number_of_employees,\n    account.owner_id as account_owner_id,\n    account.parent_id as account_parent_id,\n    account.rating as account_rating,\n    account.type as account_type\n\n        --The below scripts allows for pass through columns.\n    \n\n\n\n\n    \n\n\n\n\n    \n\n\n\n\n\nfrom contact\nleft join account \n    on contact.account_id = account.account_id\nleft join salesforce_user\n    on contact.owner_id = salesforce_user.user_id", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_enhanced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.524212Z", "completed_at": "2024-07-10T00:47:39.537325Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.538535Z", "completed_at": "2024-07-10T00:47:39.538540Z"}], "thread_id": "Thread-7", "execution_time": 0.0203249454498291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__opportunity_enhanced", "compiled": true, "compiled_code": "with opportunity as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity\"\n),\n\nsalesforce_user as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\n), \n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nuser_role as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user_role\"\n), \n\n\naccount as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__account\"\n),  \n\nadd_fields as (\n\n    select \n        opportunity.*,\n        account.account_number,\n        account.account_source,\n        account.industry,\n        account.account_name,\n        account.number_of_employees,\n        account.type as account_type,\n        opportunity_owner.user_id as opportunity_owner_id,\n        opportunity_owner.user_name as opportunity_owner_name,\n        opportunity_owner.user_role_id as opportunity_owner_role_id,\n        opportunity_owner.city opportunity_owner_city,\n        opportunity_owner.state as opportunity_owner_state,\n        opportunity_manager.user_id as opportunity_manager_id,\n        opportunity_manager.user_name as opportunity_manager_name,\n        opportunity_manager.city opportunity_manager_city,\n        opportunity_manager.state as opportunity_manager_state,\n\n        -- If using user_role table, the following will be included, otherwise it will not.\n        \n        user_role.user_role_name as opportunity_owner_position, \n        user_role.developer_name as opportunity_owner_developer_name,\n        user_role.parent_role_id as opportunity_owner_parent_role_id,\n        user_role.rollup_description as opportunity_owner_rollup_description,\n        \n\n        case\n            when opportunity.is_won then 'Won'\n            when not opportunity.is_won and opportunity.is_closed then 'Lost'\n            when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n            else 'Other'\n        end as status,\n        case when is_created_this_month then amount else 0 end as created_amount_this_month,\n        case when is_created_this_quarter then amount else 0 end as created_amount_this_quarter,\n        case when is_created_this_month then 1 else 0 end as created_count_this_month,\n        case when is_created_this_quarter then 1 else 0 end as created_count_this_quarter,\n        case when is_closed_this_month then amount else 0 end as closed_amount_this_month,\n        case when is_closed_this_quarter then amount else 0 end as closed_amount_this_quarter,\n        case when is_closed_this_month then 1 else 0 end as closed_count_this_month,\n        case when is_closed_this_quarter then 1 else 0 end as closed_count_this_quarter\n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n        \n\n\n\n\n        \n\n\n\n\n\n        -- If using user_role table, the following will be included, otherwise it will not.\n        \n        \n\n\n\n\n        \n\n    from opportunity\n    left join account \n        on opportunity.account_id = account.account_id\n    left join salesforce_user as opportunity_owner \n        on opportunity.owner_id = opportunity_owner.user_id\n    left join salesforce_user as opportunity_manager \n        on opportunity_owner.manager_id = opportunity_manager.user_id\n\n    -- If using user_role table, the following will be included, otherwise it will not.\n    \n    left join user_role \n        on opportunity_owner.user_role_id = user_role.user_role_id\n    \n)\n\nselect *\nfrom add_fields", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_enhanced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.533494Z", "completed_at": "2024-07-10T00:47:39.538858Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.542513Z", "completed_at": "2024-07-10T00:47:39.542517Z"}], "thread_id": "Thread-4", "execution_time": 0.01922917366027832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__user_user_id.ac0ab26d65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.539609Z", "completed_at": "2024-07-10T00:47:39.556940Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.557845Z", "completed_at": "2024-07-10T00:47:39.557852Z"}], "thread_id": "Thread-6", "execution_time": 0.02082514762878418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__user_user_id.9a29b41152", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.543064Z", "completed_at": "2024-07-10T00:47:39.558231Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.562795Z", "completed_at": "2024-07-10T00:47:39.562798Z"}], "thread_id": "Thread-5", "execution_time": 0.025120019912719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__daily_activity", "compiled": true, "compiled_code": "with date_spine as (\n    \n    select \n        date_trunc('day', date_day) as date_day\n    from \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"int_salesforce__date_spine\"\n),\n\n\ntask as (\n    \n    select \n        date_trunc('day', activity_date) as activity_date,\n        count(task_id) as tasks_completed\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__task\"\n    group by 1\n), \n\n\n\nsalesforce_event as (\n\n    select \n        coalesce(date_trunc('day', activity_date), date_trunc('day', activity_date_time)) as activity_date,\n        count(event_id) as events_completed\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__event\"\n    group by 1\n), \n\n\n\nsalesforce_lead as (\n\n    select \n        date_trunc('day', created_date) as created_date,\n        count(lead_id) as leads_created \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__lead\"\n    group by 1\n), \n\nsalesforce_converted_lead as (\n\n    select \n        date_trunc('day', converted_date) as converted_date,\n        count(lead_id) as leads_converted\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__lead\"\n    where is_converted\n    group by 1\n), \n\n\nopportunity as (\n\n    select \n        opportunity_id,\n        date_trunc('day', created_date) as created_date,\n        account_id,\n        date_trunc('day', close_date) as close_date,\n        is_closed,\n        is_deleted,\n        is_won,\n        owner_id, \n        stage_name,\n        type,\n        amount,\n        case\n            when is_won then 'Won'\n            when not is_won and is_closed then 'Lost'\n            when not is_closed and lower(forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n            else 'Other'\n        end as status\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity\"\n),\n\nopportunities_created as (\n\n    select\n        created_date,\n        count(opportunity_id) as opportunities_created,\n        round(sum(amount)) as opportunities_created_amount\n    from opportunity\n    group by 1\n),\n\nopportunities_closed as (\n\n    select\n        close_date,\n        count(case when status = 'Won' then opportunity_id else null end) as opportunities_won,\n        round(sum(case when status = 'Won' then amount else 0 end)) as opportunities_won_amount,\n        count(case when status = 'Lost' then opportunity_id else null end) as opportunities_lost,\n        round(sum(case when status = 'Lost' then amount else null end)) as opportunities_lost_amount,\n        round(sum(case when status = 'Pipeline' then amount else null end)) as pipeline_amount\n    from opportunity\n    group by 1\n)\n\nselect\n    date_spine.date_day,\n\n    \n    salesforce_lead.leads_created,\n    salesforce_converted_lead.leads_converted,\n    \n    \n    \n    task.tasks_completed,\n    \n\n    \n    salesforce_event.events_completed,\n    \n\n    opportunities_created.opportunities_created,\n    opportunities_created.opportunities_created_amount,\n    opportunities_closed.opportunities_won,\n    opportunities_closed.opportunities_won_amount,\n    opportunities_closed.opportunities_lost,\n    opportunities_closed.opportunities_lost_amount,\n    opportunities_closed.pipeline_amount\nfrom date_spine\n\n\nleft join salesforce_lead\n    on date_spine.date_day = salesforce_lead.created_date\nleft join salesforce_converted_lead\n    on date_spine.date_day = salesforce_converted_lead.converted_date\n\n\n\nleft join task\n    on date_spine.date_day = task.activity_date\n\n\n\nleft join salesforce_event\n    on date_spine.date_day = salesforce_event.activity_date\n\n\nleft join opportunities_created\n    on date_spine.date_day = opportunities_created.created_date\nleft join opportunities_closed\n    on date_spine.date_day = opportunities_closed.close_date", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__daily_activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.549356Z", "completed_at": "2024-07-10T00:47:39.561946Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.563189Z", "completed_at": "2024-07-10T00:47:39.563192Z"}], "thread_id": "Thread-8", "execution_time": 0.02517390251159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__task_task_id.aabe11a5d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__task\"\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.554205Z", "completed_at": "2024-07-10T00:47:39.562146Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.563570Z", "completed_at": "2024-07-10T00:47:39.563573Z"}], "thread_id": "Thread-1", "execution_time": 0.0245819091796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__task_task_id.73684ed605", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    task_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__task\"\nwhere task_id is not null\ngroup by task_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.558459Z", "completed_at": "2024-07-10T00:47:39.566686Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.567949Z", "completed_at": "2024-07-10T00:47:39.567953Z"}], "thread_id": "Thread-7", "execution_time": 0.014405965805053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__order_order_id.4782f3b34f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__order\"\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.563916Z", "completed_at": "2024-07-10T00:47:39.568730Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.572554Z", "completed_at": "2024-07-10T00:47:39.572558Z"}], "thread_id": "Thread-4", "execution_time": 0.01512002944946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__order_order_id.12a96b4e3c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__order\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.569149Z", "completed_at": "2024-07-10T00:47:39.582532Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.585903Z", "completed_at": "2024-07-10T00:47:39.585908Z"}], "thread_id": "Thread-6", "execution_time": 0.01954197883605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__opportunity_line_item_enhanced_opportunity_line_item_id.d1357e96aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_line_item_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_line_item_enhanced\"\nwhere opportunity_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.573378Z", "completed_at": "2024-07-10T00:47:39.585664Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.586923Z", "completed_at": "2024-07-10T00:47:39.586927Z"}], "thread_id": "Thread-5", "execution_time": 0.018685102462768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__opportunity_line_item_enhanced_opportunity_line_item_id.3d5a350c32", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    opportunity_line_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_line_item_enhanced\"\nwhere opportunity_line_item_id is not null\ngroup by opportunity_line_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.576075Z", "completed_at": "2024-07-10T00:47:39.586309Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.587577Z", "completed_at": "2024-07-10T00:47:39.587580Z"}], "thread_id": "Thread-8", "execution_time": 0.01911187171936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__account_daily_history_account_day_id.acb64a70cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_day_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__account_daily_history\"\nwhere account_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.578872Z", "completed_at": "2024-07-10T00:47:39.586493Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.588130Z", "completed_at": "2024-07-10T00:47:39.588133Z"}], "thread_id": "Thread-1", "execution_time": 0.019269704818725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__account_daily_history_account_day_id.0a35b2e581", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__account_daily_history\"\nwhere account_day_id is not null\ngroup by account_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.583084Z", "completed_at": "2024-07-10T00:47:39.587932Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.591791Z", "completed_at": "2024-07-10T00:47:39.591795Z"}], "thread_id": "Thread-7", "execution_time": 0.01870894432067871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__contact_enhanced_contact_id.8c317adf93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_enhanced\"\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.588472Z", "completed_at": "2024-07-10T00:47:39.593129Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.596744Z", "completed_at": "2024-07-10T00:47:39.596749Z"}], "thread_id": "Thread-4", "execution_time": 0.014030694961547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__contact_enhanced_contact_id.3a0def3b1e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    contact_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_enhanced\"\nwhere contact_id is not null\ngroup by contact_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.593971Z", "completed_at": "2024-07-10T00:47:39.605965Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.609291Z", "completed_at": "2024-07-10T00:47:39.609296Z"}], "thread_id": "Thread-6", "execution_time": 0.018078088760375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.int_salesforce__opportunity_aggregation_by_owner", "compiled": true, "compiled_code": "with salesforce_opportunity_enhanced as (\n    \n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_enhanced\"\n), \n\nsalesforce_user as (\n\n    select * \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\n), \n\nbooking_by_owner as (\n\n    select \n        opportunity_manager_id as b_manager_id,\n        opportunity_owner_id as b_owner_id,\n        round(sum(closed_amount_this_month)) as bookings_amount_closed_this_month,\n        round(sum(closed_amount_this_quarter)) as bookings_amount_closed_this_quarter,\n        count(*) as total_number_bookings,\n        round(sum(amount)) as total_bookings_amount,\n        sum(closed_count_this_month) as bookings_count_closed_this_month,\n        sum(closed_count_this_quarter) as bookings_count_closed_this_quarter,\n        round(avg(amount)) as avg_bookings_amount,\n        max(amount) as largest_booking,\n        avg(days_to_close) as avg_days_to_close\n    from salesforce_opportunity_enhanced\n    where status = 'Won'\n    group by 1, 2\n), \n\nlost_by_owner as (\n\n    select \n        opportunity_manager_id as l_manager_id,\n        opportunity_owner_id as l_owner_id,\n        round(sum(closed_amount_this_month)) as lost_amount_this_month,\n        round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n        count(*) as total_number_lost,\n        round(sum(amount)) as total_lost_amount,\n        sum(closed_count_this_month) as lost_count_this_month,\n        sum(closed_count_this_quarter) as lost_count_this_quarter\n    from salesforce_opportunity_enhanced\n    where status = 'Lost'\n    group by 1, 2\n), \n\npipeline_by_owner as (\n\n    select \n        opportunity_manager_id as p_manager_id,\n        opportunity_owner_id as p_owner_id,\n        round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n        round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n        round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n        round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n        sum(created_count_this_month) as pipeline_count_created_this_month,\n        sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n        count(*) as total_number_pipeline,\n        round(sum(amount)) as total_pipeline_amount,\n        round(sum(amount * probability)) as total_pipeline_forecast_amount,\n        round(avg(amount)) as avg_pipeline_opp_amount,\n        max(amount) as largest_deal_in_pipeline,\n        avg(days_since_created) as avg_days_open\n    from salesforce_opportunity_enhanced\n    where status = 'Pipeline'\n    group by 1, 2\n)\n\nselect \n    salesforce_user.user_id as owner_id,\n    coalesce(p_manager_id, b_manager_id, l_manager_id) as manager_id,\n    booking_by_owner.*,\n    lost_by_owner.*,\n    pipeline_by_owner.*\nfrom salesforce_user\nleft join booking_by_owner \n    on booking_by_owner.b_owner_id = salesforce_user.user_id\nleft join lost_by_owner \n    on lost_by_owner.l_owner_id = salesforce_user.user_id\nleft join pipeline_by_owner \n    on pipeline_by_owner.p_owner_id = salesforce_user.user_id", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"int_salesforce__opportunity_aggregation_by_owner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.597517Z", "completed_at": "2024-07-10T00:47:39.608992Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.610159Z", "completed_at": "2024-07-10T00:47:39.610162Z"}], "thread_id": "Thread-5", "execution_time": 0.017763853073120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__sales_snapshot", "compiled": true, "compiled_code": "with salesforce_opportunity_enhanced as (\n    \n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_enhanced\"\n), \n\npipeline as (\n\n    select \n        round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n        round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n        round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n        round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n        sum(created_count_this_month) as pipeline_count_created_this_month,\n        sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n        count(*) as total_number_pipeline,\n        round(sum(amount)) as total_pipeline_amount,\n        round(sum(amount * probability)) as total_pipeline_forecast_amount,\n        round(avg(amount)) as avg_pipeline_opp_amount,\n        max(amount) as largest_deal_in_pipeline,\n        avg(days_since_created) as avg_days_open\n    from salesforce_opportunity_enhanced\n    where status = 'Pipeline'\n), \n\nbookings as (\n\n    select \n        round(sum(closed_amount_this_month)) as bookings_amount_closed_this_month,\n        round(sum(closed_amount_this_quarter)) as bookings_amount_closed_this_quarter,\n        count(*) as total_number_bookings,\n        round(sum(amount)) as total_bookings_amount,\n        sum(closed_count_this_month) as bookings_count_closed_this_month,\n        sum(closed_count_this_quarter) as bookings_count_closed_this_quarter,\n        round(avg(amount)) as avg_bookings_amount,\n        max(amount) as largest_booking,\n        avg(days_to_close) as avg_days_to_close\n    from salesforce_opportunity_enhanced\n    where status = 'Won'\n), \n\nlost as (\n\n    select \n        round(sum(closed_amount_this_month)) as lost_amount_this_month,\n        round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n        count(*) as total_number_lost,\n        round(sum(amount)) as total_lost_amount,\n        sum(closed_count_this_month) as lost_count_this_month,\n        sum(closed_count_this_quarter) as lost_count_this_quarter\n    from salesforce_opportunity_enhanced\n    where status = 'Lost'\n)\n\nselect \n    bookings.*,\n    pipeline.*,\n    lost.*,\n    case \n        when (bookings.bookings_amount_closed_this_month + lost.lost_amount_this_month) = 0 then null\n        else round( (bookings.bookings_amount_closed_this_month / (bookings.bookings_amount_closed_this_month + lost.lost_amount_this_month) ) * 100, 2 )\n    end as win_percent_this_month,\n    case \n        when (bookings.bookings_amount_closed_this_quarter + lost.lost_amount_this_quarter) = 0 then null\n        else round( (bookings.bookings_amount_closed_this_quarter / (bookings.bookings_amount_closed_this_quarter + lost.lost_amount_this_quarter) ) * 100, 2 ) \n    end as win_percent_this_quarter,\n    case \n        when (bookings.total_bookings_amount + lost.total_lost_amount) = 0 then null \n        else round( (bookings.total_bookings_amount / (bookings.total_bookings_amount + lost.total_lost_amount) ) * 100, 2) \n    end as total_win_percent\nfrom bookings, pipeline, lost", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__sales_snapshot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.599645Z", "completed_at": "2024-07-10T00:47:39.609668Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.610834Z", "completed_at": "2024-07-10T00:47:39.610838Z"}], "thread_id": "Thread-8", "execution_time": 0.017982959747314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__opportunity_enhanced_opportunity_id.0faefe3afc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_enhanced\"\nwhere opportunity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.603381Z", "completed_at": "2024-07-10T00:47:39.610489Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.614487Z", "completed_at": "2024-07-10T00:47:39.614491Z"}], "thread_id": "Thread-1", "execution_time": 0.02099132537841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__opportunity_enhanced_opportunity_id.fb4f6a1788", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    opportunity_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_enhanced\"\nwhere opportunity_id is not null\ngroup by opportunity_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.606458Z", "completed_at": "2024-07-10T00:47:39.614282Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.615374Z", "completed_at": "2024-07-10T00:47:39.615377Z"}], "thread_id": "Thread-7", "execution_time": 0.018334150314331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__daily_activity_date_day.154c971cb8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__daily_activity\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.611444Z", "completed_at": "2024-07-10T00:47:39.615996Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.620133Z", "completed_at": "2024-07-10T00:47:39.620138Z"}], "thread_id": "Thread-4", "execution_time": 0.014026165008544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__daily_activity_date_day.288eaadb04", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_day as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__daily_activity\"\nwhere date_day is not null\ngroup by date_day\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.616442Z", "completed_at": "2024-07-10T00:47:39.623986Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.624393Z", "completed_at": "2024-07-10T00:47:39.624396Z"}], "thread_id": "Thread-6", "execution_time": 0.009564876556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__manager_performance", "compiled": true, "compiled_code": "with opportunity_aggregation_by_owner as (\n    \n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"int_salesforce__opportunity_aggregation_by_owner\"\n), \n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nuser_role as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user_role\"\n),\n\n\nsalesforce_user as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\n)\n\nselect \n    coalesce(manager.user_id, 'No Manager Assigned') as manager_id,\n    coalesce(manager.user_name, 'No Manager Assigned') as manager_name,\n    manager.city as manager_city,\n    manager.state as manager_state,\n\n    -- If using user_role table, the following will be included, otherwise it will not.\n    \n    user_role.user_role_name as manager_position,\n    \n\n    count(distinct owner_id) as number_of_direct_reports,\n    coalesce(sum(bookings_amount_closed_this_month), 0) as bookings_amount_closed_this_month,\n    coalesce(sum(bookings_amount_closed_this_quarter), 0) as bookings_amount_closed_this_quarter,\n    coalesce(sum(total_number_bookings), 0) as total_number_bookings,\n    coalesce(sum(total_bookings_amount), 0) as total_bookings_amount,\n    coalesce(sum(bookings_count_closed_this_month), 0) as bookings_count_closed_this_month,\n    coalesce(sum(bookings_count_closed_this_quarter), 0) as bookings_count_closed_this_quarter,\n    coalesce(max(largest_booking), 0) as largest_booking,\n    coalesce(sum(lost_amount_this_month), 0) as lost_amount_this_month,\n    coalesce(sum(lost_amount_this_quarter), 0) as lost_amount_this_quarter,\n    coalesce(sum(total_number_lost), 0) as total_number_lost,\n    coalesce(sum(total_lost_amount), 0) as total_lost_amount,\n    coalesce(sum(lost_count_this_month), 0) as lost_count_this_month,\n    coalesce(sum(lost_count_this_quarter), 0) as lost_count_this_quarter,\n    coalesce(sum(pipeline_created_amount_this_month), 0) as pipeline_created_amount_this_month,\n    coalesce(sum(pipeline_created_amount_this_quarter), 0) as pipeline_created_amount_this_quarter,\n    coalesce(sum(pipeline_created_forecast_amount_this_month), 0) as pipeline_created_forecast_amount_this_month,\n    coalesce(sum(pipeline_created_forecast_amount_this_quarter), 0) as pipeline_created_forecast_amount_this_quarter,\n    coalesce(sum(pipeline_count_created_this_month), 0) as pipeline_count_created_this_month,\n    coalesce(sum(pipeline_count_created_this_quarter), 0) as pipeline_count_created_this_quarter,\n    coalesce(sum(total_number_pipeline), 0) as total_number_pipeline,\n    coalesce(sum(total_pipeline_amount), 0) as total_pipeline_amount,\n    coalesce(sum(total_pipeline_forecast_amount), 0) as total_pipeline_forecast_amount,\n    coalesce(max(largest_deal_in_pipeline), 0) as largest_deal_in_pipeline,\n    round(case \n        when sum(bookings_amount_closed_this_month + lost_amount_this_month) > 0 then\n        sum(bookings_amount_closed_this_month) / sum(bookings_amount_closed_this_month + lost_amount_this_month) * 100\n        else 0\n    end, 2) as win_percent_this_month,\n    round(case\n        when sum(bookings_amount_closed_this_quarter + lost_amount_this_quarter) > 0 then\n        sum(bookings_amount_closed_this_quarter) / sum(bookings_amount_closed_this_quarter + lost_amount_this_quarter) * 100\n        else 0\n    end, 2) as win_percent_this_quarter,\n    round(case\n        when sum(total_bookings_amount + total_lost_amount) > 0 then\n        sum(total_bookings_amount) / sum(total_bookings_amount + total_lost_amount) * 100\n        else 0\n    end, 2) as total_win_percent\n\nfrom opportunity_aggregation_by_owner\nleft join salesforce_user as manager\n    on manager.user_id = opportunity_aggregation_by_owner.manager_id\n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nleft join user_role\n    on manager.user_role_id = user_role.user_role_id\n\ngroup by 1, 2, 3, 4, 5\n\n\n\nhaving count(distinct owner_id) > 0", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__manager_performance\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.620515Z", "completed_at": "2024-07-10T00:47:39.624202Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.624753Z", "completed_at": "2024-07-10T00:47:39.624756Z"}], "thread_id": "Thread-5", "execution_time": 0.009650945663452148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__owner_performance", "compiled": true, "compiled_code": "with opportunity_aggregation_by_owner as (\n    \n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"int_salesforce__opportunity_aggregation_by_owner\"  \n), \n\nsalesforce_user as (\n\n    select *\n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__user\"\n)\n\nselect \n    opportunity_aggregation_by_owner.*,\n    salesforce_user.user_name as owner_name,\n    salesforce_user.city as owner_city,\n    salesforce_user.state as owner_state,\n    case \n        when (bookings_amount_closed_this_month + lost_amount_this_month) > 0 \n            then bookings_amount_closed_this_month / (bookings_amount_closed_this_month + lost_amount_this_month) * 100\n        else 0 \n    end as win_percent_this_month,\n    case \n        when (bookings_amount_closed_this_quarter + lost_amount_this_quarter) > 0 \n            then bookings_amount_closed_this_quarter / (bookings_amount_closed_this_quarter + lost_amount_this_quarter) * 100\n        else 0 \n    end as win_percent_this_quarter,\n    case \n        when (total_bookings_amount + total_lost_amount) > 0 \n            then total_bookings_amount / (total_bookings_amount + total_lost_amount) * 100\n        else 0 \n    end as total_win_percent\nfrom opportunity_aggregation_by_owner\njoin salesforce_user \n    on salesforce_user.user_id = opportunity_aggregation_by_owner.owner_id", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__owner_performance\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.630153Z", "completed_at": "2024-07-10T00:47:39.638364Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.638592Z", "completed_at": "2024-07-10T00:47:39.638600Z"}], "thread_id": "Thread-8", "execution_time": 0.012518882751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__manager_performance_manager_id.4adc491650", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    manager_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__manager_performance\"\nwhere manager_id is not null\ngroup by manager_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.627372Z", "completed_at": "2024-07-10T00:47:39.639046Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.639266Z", "completed_at": "2024-07-10T00:47:39.639269Z"}], "thread_id": "Thread-5", "execution_time": 0.013641119003295898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__manager_performance_manager_id.67d21c2781", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect manager_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__manager_performance\"\nwhere manager_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.635618Z", "completed_at": "2024-07-10T00:47:39.639667Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.639871Z", "completed_at": "2024-07-10T00:47:39.639874Z"}], "thread_id": "Thread-4", "execution_time": 0.012764215469360352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__owner_performance_owner_id.b4050dc6e7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    owner_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__owner_performance\"\nwhere owner_id is not null\ngroup by owner_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.632906Z", "completed_at": "2024-07-10T00:47:39.640214Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.640449Z", "completed_at": "2024-07-10T00:47:39.640452Z"}], "thread_id": "Thread-7", "execution_time": 0.013756990432739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__owner_performance_owner_id.d39bad3ef7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__owner_performance\"\nwhere owner_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.226502Z", "completed_at": "2024-07-10T00:47:39.869776Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.870031Z", "completed_at": "2024-07-10T00:47:39.870037Z"}], "thread_id": "Thread-3", "execution_time": 0.6866652965545654, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__contact_daily_history", "compiled": true, "compiled_code": "\n\n\n    \n\n    \n\n    \n    \n\n\nwith spine as (\n    \n    \n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1652\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2020-01-01'as date) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2024-07-10'as date)\n\n)\n\nselect * from filtered\n\n\n),\n\ncontact_history as (\n\n    select *    \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__contact_history\"\n     \n),\n\norder_daily_values as (\n\n    select \n        *,\n        row_number() over (\n            partition by _fivetran_date, contact_id\n            order by _fivetran_start desc) as row_num    \n    from contact_history  \n),\n\nget_latest_daily_value as (\n\n    select * \n    from order_daily_values\n    where row_num = 1\n),\n\ndaily_history as (\n\n    select \n        md5(cast(coalesce(cast(spine.date_day as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(get_latest_daily_value.contact_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as contact_day_id,\n        cast(spine.date_day as date) as date_day,\n        get_latest_daily_value.*\n    from get_latest_daily_value\n    join spine on get_latest_daily_value._fivetran_start <= cast(spine.date_day as timestamp)\n        and get_latest_daily_value._fivetran_end >= cast(spine.date_day as timestamp)\n)\n\nselect * \nfrom daily_history", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_daily_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.915198Z", "completed_at": "2024-07-10T00:47:39.923280Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.923576Z", "completed_at": "2024-07-10T00:47:39.923584Z"}], "thread_id": "Thread-1", "execution_time": 0.009634017944335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__contact_daily_history_contact_day_id.9609d06e52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_day_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_daily_history\"\nwhere contact_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.919670Z", "completed_at": "2024-07-10T00:47:39.924975Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:39.925224Z", "completed_at": "2024-07-10T00:47:39.925227Z"}], "thread_id": "Thread-6", "execution_time": 0.010886907577514648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__contact_daily_history_contact_day_id.ad49bcb58c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    contact_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__contact_daily_history\"\nwhere contact_day_id is not null\ngroup by contact_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:39.418943Z", "completed_at": "2024-07-10T00:47:40.032855Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:40.033205Z", "completed_at": "2024-07-10T00:47:40.033212Z"}], "thread_id": "Thread-2", "execution_time": 0.6692960262298584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__opportunity_daily_history", "compiled": true, "compiled_code": "\n\n\n\n    \n\n    \n\n    \n    \n\n\nwith spine as (\n    \n    \n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1652\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2020-01-01'as date) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2024-07-10'as date)\n\n)\n\nselect * from filtered\n\n\n),\n\nopportunity_history as (\n\n    select *        \n    from \"postgres\".\"zz_dbt_catherine_sf\".\"stg_salesforce__opportunity_history\"\n     \n),\n\norder_daily_values as (\n\n    select \n        *,\n        row_number() over (\n            partition by _fivetran_date, opportunity_id\n            order by _fivetran_start desc) as row_num    \n    from opportunity_history  \n),\n\nget_latest_daily_value as (\n\n    select * \n    from order_daily_values\n    where row_num = 1\n),\n\ndaily_history as (\n\n    select \n        md5(cast(coalesce(cast(spine.date_day as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(get_latest_daily_value.opportunity_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as opportunity_day_id,\n        cast(spine.date_day as date) as date_day,\n        get_latest_daily_value.*\n    from get_latest_daily_value\n    join spine on get_latest_daily_value._fivetran_start <= cast(spine.date_day as timestamp)\n        and get_latest_daily_value._fivetran_end >= cast(spine.date_day as timestamp)\n)\n\nselect * \nfrom daily_history", "relation_name": "\"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_daily_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:40.086627Z", "completed_at": "2024-07-10T00:47:40.097078Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:40.097738Z", "completed_at": "2024-07-10T00:47:40.097746Z"}], "thread_id": "Thread-5", "execution_time": 0.013013124465942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__opportunity_daily_history_opportunity_day_id.d442dbd660", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_day_id\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_daily_history\"\nwhere opportunity_day_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-10T00:47:40.092480Z", "completed_at": "2024-07-10T00:47:40.097419Z"}, {"name": "execute", "started_at": "2024-07-10T00:47:40.098324Z", "completed_at": "2024-07-10T00:47:40.098330Z"}], "thread_id": "Thread-4", "execution_time": 0.01306915283203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__opportunity_daily_history_opportunity_day_id.1176a99849", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    opportunity_day_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_dbt_catherine_sf_salesforce_dev\".\"salesforce__opportunity_daily_history\"\nwhere opportunity_day_id is not null\ngroup by opportunity_day_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 4.391434907913208, "args": {"log_format_file": "debug", "use_colors_file": true, "strict_mode": false, "compile": true, "introspect": true, "defer": false, "static_parser": true, "log_path": "/Users/catherinefritz/Documents/dbt_packages/salesforce/dbt_salesforce/integration_tests/logs", "use_colors": true, "macro_debugging": false, "project_dir": "/Users/catherinefritz/Documents/dbt_packages/salesforce/dbt_salesforce/integration_tests", "write_json": true, "partial_parse_file_diff": true, "exclude": [], "print": true, "populate_cache": true, "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "log_file_max_bytes": 10485760, "quiet": false, "profiles_dir": "/Users/catherinefritz/.dbt", "log_level_file": "debug", "vars": {}, "indirect_selection": "eager", "cache_selected_only": false, "version_check": true, "partial_parse": true, "which": "generate", "require_explicit_package_overrides_for_builtin_materializations": true, "require_resource_names_without_spaces": false, "log_format": "default", "empty_catalog": false, "select": [], "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "show_resource_report": false, "favor_state": false, "log_level": "info", "static": false, "invocation_command": "dbt docs generate", "source_freshness_run_project_hooks": false}}