{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.5", "generated_at": "2024-02-14T18:31:29.579882Z", "invocation_id": "5616e603-4b85-4dc4-8664-bf42b3aaa18e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.150578Z", "completed_at": "2024-02-14T18:31:20.967223Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:20.967772Z", "completed_at": "2024-02-14T18:31:20.967779Z"}], "thread_id": "Thread-3", "execution_time": 0.8493409156799316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__contact", "compiled": true, "compiled_code": "with fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    home_phone\n    \n as \n    \n    home_phone\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    individual_id\n    \n as \n    \n    individual_id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    lead_source\n    \n as \n    \n    lead_source\n    \n, \n    \n    \n    mailing_city\n    \n as \n    \n    mailing_city\n    \n, \n    \n    \n    mailing_country\n    \n as \n    \n    mailing_country\n    \n, \n    \n    \n    mailing_country_code\n    \n as \n    \n    mailing_country_code\n    \n, \n    \n    \n    mailing_postal_code\n    \n as \n    \n    mailing_postal_code\n    \n, \n    \n    \n    mailing_state\n    \n as \n    \n    mailing_state\n    \n, \n    \n    \n    mailing_state_code\n    \n as \n    \n    mailing_state_code\n    \n, \n    \n    \n    mailing_street\n    \n as \n    \n    mailing_street\n    \n, \n    \n    \n    master_record_id\n    \n as \n    \n    master_record_id\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    reports_to_id\n    \n as \n    \n    reports_to_id\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n\n\n\n        \n    from `dbt-package-testing`.`salesforce`.`sf_contact_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as contact_id,\n        account_id,\n        department,\n        description as contact_description,\n        email,\n        first_name,\n        home_phone,\n        individual_id,\n        is_deleted,\n        cast(last_activity_date as timestamp) as last_activity_date,\n        last_modified_by_id,\n        last_modified_date,\n        last_name,\n        last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        lead_source,\n        mailing_city,\n        mailing_country,\n        mailing_country_code,\n        mailing_postal_code,\n        mailing_state,\n        mailing_state_code,\n        mailing_street,\n        master_record_id,\n        mobile_phone,\n        name as contact_name,\n        owner_id,\n        phone,\n        reports_to_id,\n        title\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__contact`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.154141Z", "completed_at": "2024-02-14T18:31:20.975143Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:20.975733Z", "completed_at": "2024-02-14T18:31:20.975737Z"}], "thread_id": "Thread-4", "execution_time": 0.8565189838409424, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__event", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__event_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    activity_date_time\n    \n as \n    \n    activity_date_time\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    end_date_time\n    \n as \n    \n    end_date_time\n    \n, \n    \n    \n    event_subtype\n    \n as \n    \n    event_subtype\n    \n, \n    \n    \n    group_event_type\n    \n as \n    \n    group_event_type\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_child\n    \n as \n    \n    is_child\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_group_event\n    \n as \n    \n    is_group_event\n    \n, \n    \n    \n    is_recurrence\n    \n as \n    \n    is_recurrence\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    start_date_time\n    \n as \n    \n    start_date_time\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    what_count\n    \n as \n    \n    what_count\n    \n, \n    \n    \n    what_id\n    \n as \n    \n    what_id\n    \n, \n    \n    \n    who_count\n    \n as \n    \n    who_count\n    \n, \n    \n    \n    who_id\n    \n as \n    \n    who_id\n    \n\n\n\n\n    from `dbt-package-testing`.`salesforce`.`sf_event_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as event_id,\n        account_id,\n        cast(activity_date as timestamp) as activity_date,\n        cast(activity_date_time as timestamp) as activity_date_time,\n        created_by_id,\n        cast(created_date as timestamp) as created_date,\n        description as event_description,\n        cast(end_date as timestamp) as end_date,\n        cast(end_date_time as timestamp) as end_date_time,\n        event_subtype,\n        group_event_type,\n        is_archived,\n        is_child,\n        is_deleted,\n        is_group_event,\n        is_recurrence,\n        last_modified_by_id,\n        cast(last_modified_date as timestamp) as last_modified_date,\n        location,\n        owner_id,\n        cast(start_date_time as timestamp) as start_date_time,\n        subject,\n        type,\n        what_count,\n        what_id,\n        who_count,\n        who_id\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__event`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.146301Z", "completed_at": "2024-02-14T18:31:20.981522Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:20.982041Z", "completed_at": "2024-02-14T18:31:20.982046Z"}], "thread_id": "Thread-2", "execution_time": 0.86480712890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__account", "compiled": true, "compiled_code": "with fields as (\n\n    select\n    \n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_number\n    \n as \n    \n    account_number\n    \n, \n    \n    \n    account_source\n    \n as \n    \n    account_source\n    \n, \n    \n    \n    annual_revenue\n    \n as \n    \n    annual_revenue\n    \n, \n    \n    \n    billing_city\n    \n as \n    \n    billing_city\n    \n, \n    \n    \n    billing_country\n    \n as \n    \n    billing_country\n    \n, \n    \n    \n    billing_postal_code\n    \n as \n    \n    billing_postal_code\n    \n, \n    \n    \n    billing_state\n    \n as \n    \n    billing_state\n    \n, \n    \n    \n    billing_state_code\n    \n as \n    \n    billing_state_code\n    \n, \n    \n    \n    billing_street\n    \n as \n    \n    billing_street\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    industry\n    \n as \n    \n    industry\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    master_record_id\n    \n as \n    \n    master_record_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    number_of_employees\n    \n as \n    \n    number_of_employees\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    ownership\n    \n as \n    \n    ownership\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    rating\n    \n as \n    \n    rating\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    shipping_city\n    \n as \n    \n    shipping_city\n    \n, \n    \n    \n    shipping_country\n    \n as \n    \n    shipping_country\n    \n, \n    \n    \n    shipping_country_code\n    \n as \n    \n    shipping_country_code\n    \n, \n    \n    \n    shipping_postal_code\n    \n as \n    \n    shipping_postal_code\n    \n, \n    \n    \n    shipping_state\n    \n as \n    \n    shipping_state\n    \n, \n    \n    \n    shipping_state_code\n    \n as \n    \n    shipping_state_code\n    \n, \n    \n    \n    shipping_street\n    \n as \n    \n    shipping_street\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n\n\n\n\n    from `dbt-package-testing`.`salesforce`.`sf_account_data`\n), \n\nfinal as (\n\n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        account_number,\n        account_source,\n        cast(annual_revenue as numeric) as annual_revenue,\n        billing_city,\n        billing_country,\n        billing_postal_code,\n        billing_state,\n        billing_state_code,\n        billing_street,\n        description as account_description,\n        id as account_id,\n        industry,\n        is_deleted,\n        cast(last_activity_date as timestamp) as last_activity_date,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        master_record_id,\n        name as account_name,\n        number_of_employees,\n        owner_id,\n        ownership,\n        parent_id,\n        rating,\n        record_type_id,\n        shipping_city,\n        shipping_country,\n        shipping_country_code,\n        shipping_postal_code,\n        shipping_state,\n        shipping_state_code,\n        shipping_street,\n        type,\n        website\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__account`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.984084Z", "completed_at": "2024-02-14T18:31:21.593384Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:21.612256Z", "completed_at": "2024-02-14T18:31:21.612263Z"}], "thread_id": "Thread-2", "execution_time": 0.6297650337219238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__order", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__order_enabled within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activated_by_id\n    \n as \n    \n    activated_by_id\n    \n, \n    \n    \n    activated_date\n    \n as \n    \n    activated_date\n    \n, \n    \n    \n    billing_city\n    \n as \n    \n    billing_city\n    \n, \n    \n    \n    billing_country\n    \n as \n    \n    billing_country\n    \n, \n    \n    \n    billing_country_code\n    \n as \n    \n    billing_country_code\n    \n, \n    \n    \n    billing_postal_code\n    \n as \n    \n    billing_postal_code\n    \n, \n    \n    \n    billing_state\n    \n as \n    \n    billing_state\n    \n, \n    \n    \n    billing_state_code\n    \n as \n    \n    billing_state_code\n    \n, \n    \n    \n    billing_street\n    \n as \n    \n    billing_street\n    \n, \n    \n    \n    contract_id\n    \n as \n    \n    contract_id\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    opportunity_id\n    \n as \n    \n    opportunity_id\n    \n, \n    \n    \n    order_number\n    \n as \n    \n    order_number\n    \n, \n    \n    \n    original_order_id\n    \n as \n    \n    original_order_id\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    pricebook_2_id\n    \n as \n    \n    pricebook_2_id\n    \n, \n    \n    \n    shipping_city\n    \n as \n    \n    shipping_city\n    \n, \n    \n    \n    shipping_country\n    \n as \n    \n    shipping_country\n    \n, \n    \n    \n    shipping_country_code\n    \n as \n    \n    shipping_country_code\n    \n, \n    \n    \n    shipping_postal_code\n    \n as \n    \n    shipping_postal_code\n    \n, \n    \n    \n    shipping_state\n    \n as \n    \n    shipping_state\n    \n, \n    \n    \n    shipping_state_code\n    \n as \n    \n    shipping_state_code\n    \n, \n    \n    \n    shipping_street\n    \n as \n    \n    shipping_street\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    total_amount\n    \n as \n    \n    total_amount\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n        \n    from `dbt-package-testing`.`salesforce`.`sf_order_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as order_id,\n        account_id,\n        activated_by_id,\n        cast(activated_date as timestamp) as activated_date,\n        billing_city,\n        billing_country,\n        billing_country_code,\n        billing_postal_code,\n        billing_state,\n        billing_state_code,\n        billing_street,\n        contract_id,\n        created_by_id,\n        created_date,\n        description as order_description,\n        cast(end_date as timestamp) as end_date,\n        is_deleted,\n        last_modified_by_id,\n        cast(last_modified_date as timestamp) as last_modified_date,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        opportunity_id,\n        order_number,\n        original_order_id,\n        owner_id,\n        pricebook_2_id,\n        shipping_city,\n        shipping_country,\n        shipping_country_code,\n        shipping_postal_code,\n        shipping_state,\n        shipping_state_code,\n        shipping_street,\n        status,\n        total_amount,\n        type\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__order`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.969437Z", "completed_at": "2024-02-14T18:31:21.618122Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:21.619634Z", "completed_at": "2024-02-14T18:31:21.619640Z"}], "thread_id": "Thread-3", "execution_time": 0.6517009735107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__opportunity", "compiled": true, "compiled_code": "with fields as (\n\n    select\n\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    close_date\n    \n as \n    \n    close_date\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    expected_revenue\n    \n as \n    \n    expected_revenue\n    \n, \n    \n    \n    fiscal\n    \n as \n    \n    fiscal\n    \n, \n    \n    \n    fiscal_quarter\n    \n as \n    \n    fiscal_quarter\n    \n, \n    \n    \n    fiscal_year\n    \n as \n    \n    fiscal_year\n    \n, \n    \n    \n    forecast_category\n    \n as \n    \n    forecast_category\n    \n, \n    \n    \n    forecast_category_name\n    \n as \n    \n    forecast_category_name\n    \n, \n    \n    \n    has_open_activity\n    \n as \n    \n    has_open_activity\n    \n, \n    \n    \n    has_opportunity_line_item\n    \n as \n    \n    has_opportunity_line_item\n    \n, \n    \n    \n    has_overdue_task\n    \n as \n    \n    has_overdue_task\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_closed\n    \n as \n    \n    is_closed\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_won\n    \n as \n    \n    is_won\n    \n, \n    \n    \n    last_activity_date\n    \n as \n    \n    last_activity_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    lead_source\n    \n as \n    \n    lead_source\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    next_step\n    \n as \n    \n    next_step\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    probability\n    \n as \n    \n    probability\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    stage_name\n    \n as \n    \n    stage_name\n    \n, \n    \n    \n    synced_quote_id\n    \n as \n    \n    synced_quote_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n    from `dbt-package-testing`.`salesforce`.`sf_opportunity_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        account_id,\n        cast(amount as numeric) as amount,\n        campaign_id,\n        cast(close_date as timestamp) as close_date,\n        cast(created_date as timestamp) as created_date,\n        description as opportunity_description,\n        cast(expected_revenue as numeric) as expected_revenue,\n        fiscal,\n        fiscal_quarter,\n        fiscal_year,\n        forecast_category,\n        forecast_category_name,\n        has_open_activity,\n        has_opportunity_line_item,\n        has_overdue_task,\n        id as opportunity_id,\n        is_closed,\n        is_deleted,\n        is_won,\n        cast(last_activity_date as timestamp) as last_activity_date,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        lead_source,\n        name as opportunity_name,\n        next_step,\n        owner_id,\n        probability,\n        record_type_id,\n        stage_name,\n        synced_quote_id,\n        type\n        \n        \n\n\n\n\n\n    from fields\n    where coalesce(_fivetran_active, true)\n), \n\ncalculated as (\n        \n    select \n        *,\n        created_date >= timestamp_trunc(\n        cast(current_timestamp as timestamp),\n        month\n    ) as is_created_this_month,\n        created_date >= timestamp_trunc(\n        cast(current_timestamp as timestamp),\n        quarter\n    ) as is_created_this_quarter,\n        \n\n    datetime_diff(\n        cast(created_date as datetime),\n        cast(current_timestamp as datetime),\n        day\n    )\n\n   as days_since_created,\n        \n\n    datetime_diff(\n        cast(created_date as datetime),\n        cast(close_date as datetime),\n        day\n    )\n\n   as days_to_close,\n        timestamp_trunc(\n        cast(close_date as timestamp),\n        month\n    ) = timestamp_trunc(\n        cast(current_timestamp as timestamp),\n        month\n    ) as is_closed_this_month,\n        timestamp_trunc(\n        cast(close_date as timestamp),\n        quarter\n    ) = timestamp_trunc(\n        cast(current_timestamp as timestamp),\n        quarter\n    ) as is_closed_this_quarter\n    from final\n)\n\nselect * \nfrom calculated\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.977385Z", "completed_at": "2024-02-14T18:31:21.618411Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:21.620040Z", "completed_at": "2024-02-14T18:31:21.620043Z"}], "thread_id": "Thread-4", "execution_time": 0.6442959308624268, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__opportunity_line_item", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__opportunity_line_item_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discount\n    \n as \n    \n    discount\n    \n, \n    \n    \n    has_quantity_schedule\n    \n as \n    \n    has_quantity_schedule\n    \n, \n    \n    \n    has_revenue_schedule\n    \n as \n    \n    has_revenue_schedule\n    \n, \n    \n    \n    has_schedule\n    \n as \n    \n    has_schedule\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    list_price\n    \n as \n    \n    list_price\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    opportunity_id\n    \n as \n    \n    opportunity_id\n    \n, \n    \n    \n    pricebook_entry_id\n    \n as \n    \n    pricebook_entry_id\n    \n, \n    \n    \n    product_2_id\n    \n as \n    \n    product_2_id\n    \n, \n    \n    \n    product_code\n    \n as \n    \n    product_code\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    service_date\n    \n as \n    \n    service_date\n    \n, \n    \n    \n    sort_order\n    \n as \n    \n    sort_order\n    \n, \n    \n    \n    total_price\n    \n as \n    \n    total_price\n    \n, \n    \n    \n    unit_price\n    \n as \n    \n    unit_price\n    \n\n\n\n        \n    from `dbt-package-testing`.`salesforce`.`sf_opportunity_line_item_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as opportunity_line_item_id,\n        created_by_id,\n        cast(created_date as timestamp) as created_date,\n        description as opportunity_line_item_description,\n        discount,\n        has_quantity_schedule,\n        has_revenue_schedule,\n        has_schedule,\n        is_deleted,\n        last_modified_by_id,\n        cast(last_modified_date as timestamp) as last_modified_date,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        list_price,\n        name as opportunity_line_item_name,\n        opportunity_id,\n        pricebook_entry_id,\n        product_2_id,\n        product_code,\n        quantity,\n        cast(service_date as timestamp) as service_date,\n        sort_order,\n        total_price,\n        unit_price\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity_line_item`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:21.614180Z", "completed_at": "2024-02-14T18:31:22.328262Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.329815Z", "completed_at": "2024-02-14T18:31:22.329821Z"}], "thread_id": "Thread-2", "execution_time": 0.7173690795898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__product_2", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__product_2_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    display_url\n    \n as \n    \n    display_url\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    family\n    \n as \n    \n    family\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_active\n    \n as \n    \n    is_active\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    number_of_quantity_installments\n    \n as \n    \n    number_of_quantity_installments\n    \n, \n    \n    \n    number_of_revenue_installments\n    \n as \n    \n    number_of_revenue_installments\n    \n, \n    \n    \n    product_code\n    \n as \n    \n    product_code\n    \n, \n    \n    \n    quantity_installment_period\n    \n as \n    \n    quantity_installment_period\n    \n, \n    \n    \n    quantity_schedule_type\n    \n as \n    \n    quantity_schedule_type\n    \n, \n    \n    \n    quantity_unit_of_measure\n    \n as \n    \n    quantity_unit_of_measure\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    revenue_installment_period\n    \n as \n    \n    revenue_installment_period\n    \n, \n    \n    \n    revenue_schedule_type\n    \n as \n    \n    revenue_schedule_type\n    \n\n\n\n        \n    from `dbt-package-testing`.`salesforce`.`sf_product_2_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as product_2_id,\n        created_by_id,\n        cast(created_date as timestamp) as created_date,\n        description as product_2_description,\n        display_url,\n        external_id,\n        family,\n        is_active,\n        is_archived,\n        is_deleted,\n        last_modified_by_id,\n        cast(last_modified_date as timestamp) as last_modified_date,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        name as product_2_name,\n        number_of_quantity_installments,\n        number_of_revenue_installments,\n        product_code,\n        quantity_installment_period,\n        quantity_schedule_type,\n        quantity_unit_of_measure,\n        record_type_id,\n        revenue_installment_period,\n        revenue_schedule_type\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__product_2`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:21.623307Z", "completed_at": "2024-02-14T18:31:22.328585Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.330085Z", "completed_at": "2024-02-14T18:31:22.330089Z"}], "thread_id": "Thread-3", "execution_time": 0.7093710899353027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__task", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__task_enabled variable within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    activity_date\n    \n as \n    \n    activity_date\n    \n, \n    \n    \n    call_disposition\n    \n as \n    \n    call_disposition\n    \n, \n    \n    \n    call_duration_in_seconds\n    \n as \n    \n    call_duration_in_seconds\n    \n, \n    \n    \n    call_object\n    \n as \n    \n    call_object\n    \n, \n    \n    \n    call_type\n    \n as \n    \n    call_type\n    \n, \n    \n    \n    completed_date_time\n    \n as \n    \n    completed_date_time\n    \n, \n    \n    \n    created_by_id\n    \n as \n    \n    created_by_id\n    \n, \n    \n    \n    created_date\n    \n as \n    \n    created_date\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_archived\n    \n as \n    \n    is_archived\n    \n, \n    \n    \n    is_closed\n    \n as \n    \n    is_closed\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    is_high_priority\n    \n as \n    \n    is_high_priority\n    \n, \n    \n    \n    last_modified_by_id\n    \n as \n    \n    last_modified_by_id\n    \n, \n    \n    \n    last_modified_date\n    \n as \n    \n    last_modified_date\n    \n, \n    \n    \n    owner_id\n    \n as \n    \n    owner_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    record_type_id\n    \n as \n    \n    record_type_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    task_subtype\n    \n as \n    \n    task_subtype\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    what_count\n    \n as \n    \n    what_count\n    \n, \n    \n    \n    what_id\n    \n as \n    \n    what_id\n    \n, \n    \n    \n    who_count\n    \n as \n    \n    who_count\n    \n, \n    \n    \n    who_id\n    \n as \n    \n    who_id\n    \n\n\n\n        \n    from `dbt-package-testing`.`salesforce`.`sf_task_data`\n), \n\nfinal as (\n    \n    select \n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        id as task_id,\n        account_id,\n        cast(activity_date as timestamp) as activity_date,\n        call_disposition,\n        call_duration_in_seconds,\n        call_object,\n        call_type,\n        cast(completed_date_time as timestamp) as completed_date_time,\n        created_by_id,\n        cast(created_date as timestamp) as created_date,\n        description as task_description,\n        is_archived,\n        is_closed,\n        is_deleted,\n        is_high_priority,\n        last_modified_by_id,\n        cast(last_modified_date as timestamp) as last_modified_date,\n        owner_id,\n        priority,\n        record_type_id,\n        status,\n        subject,\n        task_subtype,\n        type,\n        what_count,\n        what_id,\n        who_count,\n        who_id\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final\nwhere not coalesce(is_deleted, false)", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__task`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:21.627020Z", "completed_at": "2024-02-14T18:31:22.328863Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.330396Z", "completed_at": "2024-02-14T18:31:22.330399Z"}], "thread_id": "Thread-4", "execution_time": 0.7094740867614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__user", "compiled": true, "compiled_code": "with fields as (\n\n    select\n\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company_name\n    \n as \n    \n    company_name\n    \n, \n    \n    \n    contact_id\n    \n as \n    \n    contact_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    department\n    \n as \n    \n    department\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    individual_id\n    \n as \n    \n    individual_id\n    \n, \n    \n    \n    is_active\n    \n as \n    \n    is_active\n    \n, \n    \n    \n    last_login_date\n    \n as \n    \n    last_login_date\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_referenced_date\n    \n as \n    \n    last_referenced_date\n    \n, \n    \n    \n    last_viewed_date\n    \n as \n    \n    last_viewed_date\n    \n, \n    \n    \n    manager_id\n    \n as \n    \n    manager_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    postal_code\n    \n as \n    \n    postal_code\n    \n, \n    \n    \n    profile_id\n    \n as \n    \n    profile_id\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    state_code\n    \n as \n    \n    state_code\n    \n, \n    \n    \n    street\n    \n as \n    \n    street\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    user_role_id\n    \n as \n    \n    user_role_id\n    \n, \n    \n    \n    user_type\n    \n as \n    \n    user_type\n    \n, \n    \n    \n    username\n    \n as \n    \n    username\n    \n\n\n\n\n    from `dbt-package-testing`.`salesforce`.`sf_user_data`\n), \n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        account_id,\n        alias,\n        city,\n        company_name,\n        contact_id,\n        country,\n        country_code,\n        department,\n        email,\n        first_name,\n        id as user_id,\n        individual_id,\n        is_active,\n        cast(last_login_date as timestamp) as last_login_date,\n        last_name,\n        cast(last_referenced_date as timestamp) as last_referenced_date,\n        cast(last_viewed_date as timestamp) as last_viewed_date,\n        manager_id,\n        name as user_name,\n        postal_code,\n        profile_id,\n        state,\n        state_code,\n        street,\n        title,\n        user_role_id,\n        user_type,\n        username \n        \n        \n\n\n\n\n    \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__user`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.338593Z", "completed_at": "2024-02-14T18:31:22.339747Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.342551Z", "completed_at": "2024-02-14T18:31:22.342556Z"}], "thread_id": "Thread-3", "execution_time": 0.009732723236083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.340034Z", "completed_at": "2024-02-14T18:31:22.341121Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.342832Z", "completed_at": "2024-02-14T18:31:22.342836Z"}], "thread_id": "Thread-4", "execution_time": 0.009873151779174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.346117Z", "completed_at": "2024-02-14T18:31:22.347305Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.349330Z", "completed_at": "2024-02-14T18:31:22.349333Z"}], "thread_id": "Thread-3", "execution_time": 0.005150794982910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_contact_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.347576Z", "completed_at": "2024-02-14T18:31:22.348640Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.349577Z", "completed_at": "2024-02-14T18:31:22.349580Z"}], "thread_id": "Thread-4", "execution_time": 0.005207061767578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_contact_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.352436Z", "completed_at": "2024-02-14T18:31:22.354144Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.356191Z", "completed_at": "2024-02-14T18:31:22.356195Z"}], "thread_id": "Thread-3", "execution_time": 0.0055849552154541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_event_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.354421Z", "completed_at": "2024-02-14T18:31:22.355504Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.356439Z", "completed_at": "2024-02-14T18:31:22.356441Z"}], "thread_id": "Thread-4", "execution_time": 0.005689859390258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_lead_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.359273Z", "completed_at": "2024-02-14T18:31:22.360383Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.362419Z", "completed_at": "2024-02-14T18:31:22.362422Z"}], "thread_id": "Thread-3", "execution_time": 0.004956960678100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.360647Z", "completed_at": "2024-02-14T18:31:22.361695Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.362670Z", "completed_at": "2024-02-14T18:31:22.362673Z"}], "thread_id": "Thread-4", "execution_time": 0.00506591796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.365538Z", "completed_at": "2024-02-14T18:31:22.366775Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.369599Z", "completed_at": "2024-02-14T18:31:22.369604Z"}], "thread_id": "Thread-3", "execution_time": 0.005948781967163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_opportunity_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.367053Z", "completed_at": "2024-02-14T18:31:22.368802Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.369860Z", "completed_at": "2024-02-14T18:31:22.369863Z"}], "thread_id": "Thread-4", "execution_time": 0.0060672760009765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_order_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.372745Z", "completed_at": "2024-02-14T18:31:22.373899Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.375899Z", "completed_at": "2024-02-14T18:31:22.375903Z"}], "thread_id": "Thread-3", "execution_time": 0.0049669742584228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_product_2_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.374162Z", "completed_at": "2024-02-14T18:31:22.375220Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.376145Z", "completed_at": "2024-02-14T18:31:22.376147Z"}], "thread_id": "Thread-4", "execution_time": 0.0050699710845947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.378942Z", "completed_at": "2024-02-14T18:31:22.380065Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.382075Z", "completed_at": "2024-02-14T18:31:22.382078Z"}], "thread_id": "Thread-3", "execution_time": 0.004923820495605469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.380323Z", "completed_at": "2024-02-14T18:31:22.381375Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.382324Z", "completed_at": "2024-02-14T18:31:22.382327Z"}], "thread_id": "Thread-4", "execution_time": 0.0050318241119384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.salesforce_integration_tests.sf_user_role_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.385137Z", "completed_at": "2024-02-14T18:31:22.396918Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.397428Z", "completed_at": "2024-02-14T18:31:22.397432Z"}], "thread_id": "Thread-3", "execution_time": 0.013871908187866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__account_account_id.1e0ff361d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__account`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.390924Z", "completed_at": "2024-02-14T18:31:22.401876Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.402526Z", "completed_at": "2024-02-14T18:31:22.402530Z"}], "thread_id": "Thread-4", "execution_time": 0.018667936325073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__contact_contact_id.d7c02bef78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__contact`\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.399004Z", "completed_at": "2024-02-14T18:31:22.404062Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.408969Z", "completed_at": "2024-02-14T18:31:22.408974Z"}], "thread_id": "Thread-3", "execution_time": 0.011095046997070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__event_event_id.e964b30db8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__event`\nwhere event_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.404776Z", "completed_at": "2024-02-14T18:31:22.413683Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.414450Z", "completed_at": "2024-02-14T18:31:22.414454Z"}], "thread_id": "Thread-4", "execution_time": 0.011472940444946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__account_account_id.6d58a39ba7", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select account_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__account`\n  where account_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.410767Z", "completed_at": "2024-02-14T18:31:22.414191Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.415444Z", "completed_at": "2024-02-14T18:31:22.415447Z"}], "thread_id": "Thread-3", "execution_time": 0.0060710906982421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__contact_contact_id.0cc2c0609e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select contact_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__contact`\n  where contact_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.417765Z", "completed_at": "2024-02-14T18:31:22.424778Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.425294Z", "completed_at": "2024-02-14T18:31:22.425298Z"}], "thread_id": "Thread-4", "execution_time": 0.00923609733581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__event_event_id.13f7c8c0d9", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__event`\n  where event_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.421690Z", "completed_at": "2024-02-14T18:31:22.429772Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.430283Z", "completed_at": "2024-02-14T18:31:22.430287Z"}], "thread_id": "Thread-3", "execution_time": 0.013614177703857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__order_order_id.4782f3b34f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__order`\nwhere order_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.426856Z", "completed_at": "2024-02-14T18:31:22.430541Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.431823Z", "completed_at": "2024-02-14T18:31:22.431826Z"}], "thread_id": "Thread-4", "execution_time": 0.006374835968017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__order_order_id.12a96b4e3c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select order_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__order`\n  where order_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.433455Z", "completed_at": "2024-02-14T18:31:22.439896Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.440414Z", "completed_at": "2024-02-14T18:31:22.440418Z"}], "thread_id": "Thread-3", "execution_time": 0.00904226303100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__opportunity_opportunity_id.234c5e60bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity`\nwhere opportunity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.437026Z", "completed_at": "2024-02-14T18:31:22.440686Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.441944Z", "completed_at": "2024-02-14T18:31:22.441947Z"}], "thread_id": "Thread-4", "execution_time": 0.00640416145324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__opportunity_opportunity_id.367b0f577a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select opportunity_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity`\n  where opportunity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.443585Z", "completed_at": "2024-02-14T18:31:22.450998Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.451524Z", "completed_at": "2024-02-14T18:31:22.451528Z"}], "thread_id": "Thread-3", "execution_time": 0.010014057159423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__opportunity_line_item_opportunity_line_item_id.b5d2465072", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_line_item_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity_line_item`\nwhere opportunity_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.448011Z", "completed_at": "2024-02-14T18:31:22.451788Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.453064Z", "completed_at": "2024-02-14T18:31:22.453067Z"}], "thread_id": "Thread-4", "execution_time": 0.006549835205078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__opportunity_line_item_opportunity_line_item_id.c18042d902", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select opportunity_line_item_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity_line_item`\n  where opportunity_line_item_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.454691Z", "completed_at": "2024-02-14T18:31:22.464582Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.465082Z", "completed_at": "2024-02-14T18:31:22.465087Z"}], "thread_id": "Thread-3", "execution_time": 0.01220703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__opportunity_line_item_enhanced", "compiled": true, "compiled_code": "--This model will only run if you have the underlying opportunity line item table.\n\nwith opportunity_line_item as (\n    \n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity_line_item`\n),\n\n-- If using product_2 table, the following will be included, otherwise it will not.\n\nproduct_2 as (\n\n    select * \n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__product_2`\n),\n\n\n\nfinal as (\n\n    select\n        oli.opportunity_line_item_id,\n        oli.opportunity_line_item_name,\n        oli.opportunity_line_item_description,\n        oli.opportunity_id,\n        row_number() over (partition by oli.opportunity_id order by oli.created_date) as line_item_index,\n        count(opportunity_line_item_id) over (partition by oli.opportunity_id) as total_line_items,\n        oli.created_date,\n        oli.last_modified_date,\n        oli.service_date,\n        oli.pricebook_entry_id,\n        oli.product_2_id,\n        oli.list_price,\n        oli.quantity,\n        oli.unit_price,\n        oli.total_price,\n        oli.has_quantity_schedule,\n        oli.has_revenue_schedule\n\n        \n        ,\n        product_2.product_2_name,\n        product_2.product_code,\n        product_2.product_2_description,\n        product_2.external_id as product_external_id,\n        product_2.family as product_family,\n        product_2.is_active as product_is_active,\n        product_2.is_archived as product_is_archived,\n        product_2.is_deleted as product_is_deleted,\n        product_2.number_of_quantity_installments as product_number_of_quantity_installments,\n        product_2.quantity_installment_period as product_quantity_installment_period,\n        product_2.quantity_schedule_type as product_quantity_schedule_type,\n        product_2.quantity_unit_of_measure as product_quantity_unit_of_measure,\n        product_2.number_of_revenue_installments as product_number_of_revenue_installments,\n        product_2.revenue_installment_period as product_revenue_installment_period,\n        product_2.revenue_schedule_type as product_revenue_schedule_type\n        \n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n\n        \n        \n\n\n\n\n        \n\n    from opportunity_line_item as oli\n\n    \n    left join product_2\n        on oli.product_2_id = product_2.product_2_id\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__opportunity_line_item_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.461592Z", "completed_at": "2024-02-14T18:31:22.469642Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.470243Z", "completed_at": "2024-02-14T18:31:22.470247Z"}], "thread_id": "Thread-4", "execution_time": 0.009792804718017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__product_2_product_2_id.84aed29e8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_2_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__product_2`\nwhere product_2_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.466673Z", "completed_at": "2024-02-14T18:31:22.475540Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.476059Z", "completed_at": "2024-02-14T18:31:22.476063Z"}], "thread_id": "Thread-3", "execution_time": 0.010669231414794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__product_2_product_2_id.b4bc489d61", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select product_2_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__product_2`\n  where product_2_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.471934Z", "completed_at": "2024-02-14T18:31:22.476314Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.477592Z", "completed_at": "2024-02-14T18:31:22.477596Z"}], "thread_id": "Thread-4", "execution_time": 0.007169961929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__task_task_id.aabe11a5d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__task`\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.479253Z", "completed_at": "2024-02-14T18:31:22.487182Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.487697Z", "completed_at": "2024-02-14T18:31:22.487701Z"}], "thread_id": "Thread-3", "execution_time": 0.010260820388793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__task_task_id.73684ed605", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select task_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__task`\n  where task_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.482748Z", "completed_at": "2024-02-14T18:31:22.489305Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.492745Z", "completed_at": "2024-02-14T18:31:22.492749Z"}], "thread_id": "Thread-4", "execution_time": 0.011120080947875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__contact_enhanced", "compiled": true, "compiled_code": "with contact as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__contact`\n), \n\naccount as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__account`\n),\n\nsalesforce_user as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n)\n\nselect \n    contact.contact_id,\n    contact.contact_name,\n    contact.account_id,\n    contact.department,\n    contact.contact_description,\n    contact.email,\n    contact.individual_id,\n    contact.is_deleted as contact_is_deleted,\n    contact.last_activity_date,\n    contact.lead_source,\n    contact.mailing_city,\n    contact.mailing_country,\n    contact.mailing_country_code,\n    contact.mailing_postal_code,\n    contact.mailing_state,\n    contact.mailing_state_code,\n    contact.mailing_street,\n    contact.master_record_id,\n    contact.mobile_phone,\n    contact.owner_id as contact_owner_id,\n    contact.phone,\n    contact.reports_to_id,\n    salesforce_user.user_name as contact_owner_name,\n    account.account_name,\n    account.account_number,\n    account.account_source,\n    account.annual_revenue as account_annual_revenue,\n    account.account_description,\n    account.industry as account_industry,\n    account.is_deleted as account_is_deleted,\n    account.number_of_employees as account_number_of_employees,\n    account.owner_id as account_owner_id,\n    account.parent_id as account_parent_id,\n    account.rating as account_rating,\n    account.type as account_type\n\n        --The below scripts allows for pass through columns.\n    \n\n\n\n\n    \n\n\n\n\n    \n\n\n\n\n\nfrom contact\nleft join account \n    on contact.account_id = account.account_id\nleft join salesforce_user\n    on contact.owner_id = salesforce_user.user_id", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__contact_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.489568Z", "completed_at": "2024-02-14T18:31:22.494281Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.497742Z", "completed_at": "2024-02-14T18:31:22.497747Z"}], "thread_id": "Thread-3", "execution_time": 0.009511947631835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__user_user_id.ac0ab26d65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.499451Z", "completed_at": "2024-02-14T18:31:22.503569Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.504828Z", "completed_at": "2024-02-14T18:31:22.504835Z"}], "thread_id": "Thread-3", "execution_time": 0.0068051815032958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__opportunity_line_item_enhanced_opportunity_line_item_id.d1357e96aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_line_item_id\nfrom `dbt-package-testing`.`salesforce`.`salesforce__opportunity_line_item_enhanced`\nwhere opportunity_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.494976Z", "completed_at": "2024-02-14T18:31:22.503887Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.505134Z", "completed_at": "2024-02-14T18:31:22.505138Z"}], "thread_id": "Thread-4", "execution_time": 0.012485027313232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__user_user_id.9a29b41152", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select user_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n  where user_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.508495Z", "completed_at": "2024-02-14T18:31:22.514667Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.515686Z", "completed_at": "2024-02-14T18:31:22.515690Z"}], "thread_id": "Thread-3", "execution_time": 0.009183883666992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__opportunity_line_item_enhanced_opportunity_line_item_id.3d5a350c32", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select opportunity_line_item_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__opportunity_line_item_enhanced`\n  where opportunity_line_item_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.511565Z", "completed_at": "2024-02-14T18:31:22.514957Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.515953Z", "completed_at": "2024-02-14T18:31:22.515956Z"}], "thread_id": "Thread-4", "execution_time": 0.009268999099731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__contact_enhanced_contact_id.8c317adf93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contact_id\nfrom `dbt-package-testing`.`salesforce`.`salesforce__contact_enhanced`\nwhere contact_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.518273Z", "completed_at": "2024-02-14T18:31:22.521680Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.522201Z", "completed_at": "2024-02-14T18:31:22.522205Z"}], "thread_id": "Thread-3", "execution_time": 0.004982948303222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__contact_enhanced_contact_id.3a0def3b1e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select contact_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__contact_enhanced`\n  where contact_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.335517Z", "completed_at": "2024-02-14T18:31:22.925058Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.925989Z", "completed_at": "2024-02-14T18:31:22.925999Z"}], "thread_id": "Thread-2", "execution_time": 0.5935702323913574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce_source.stg_salesforce__user_role", "compiled": true, "compiled_code": "--To disable this model, set the salesforce__user_role_enabled within your dbt_project.yml file to False.\n\n\nwith fields as (\n\n    select\n        \n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    developer_name\n    \n as \n    \n    developer_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    opportunity_access_for_account_owner\n    \n as \n    \n    opportunity_access_for_account_owner\n    \n, \n    \n    \n    parent_role_id\n    \n as \n    \n    parent_role_id\n    \n, \n    \n    \n    rollup_description\n    \n as \n    \n    rollup_description\n    \n\n\n\n\n    from `dbt-package-testing`.`salesforce`.`sf_user_role_data`\n), \n\nfinal as (\n\n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp) as _fivetran_synced,\n        developer_name,\n        id as user_role_id,\n        name as user_role_name,\n        opportunity_access_for_account_owner,\n        parent_role_id,\n        rollup_description\n        \n        \n\n\n\n\n        \n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`salesforce`.`stg_salesforce__user_role`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.931878Z", "completed_at": "2024-02-14T18:31:22.953359Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.954006Z", "completed_at": "2024-02-14T18:31:22.954011Z"}], "thread_id": "Thread-4", "execution_time": 0.02604198455810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__opportunity_enhanced", "compiled": true, "compiled_code": "with opportunity as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity`\n),\n\nsalesforce_user as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n), \n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nuser_role as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user_role`\n), \n\n\naccount as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__account`\n),  \n\nadd_fields as (\n\n    select \n        opportunity.*,\n        account.account_number,\n        account.account_source,\n        account.industry,\n        account.account_name,\n        account.number_of_employees,\n        account.type as account_type,\n        opportunity_owner.user_id as opportunity_owner_id,\n        opportunity_owner.user_name as opportunity_owner_name,\n        opportunity_owner.user_role_id as opportunity_owner_role_id,\n        opportunity_owner.city opportunity_owner_city,\n        opportunity_owner.state as opportunity_owner_state,\n        opportunity_manager.user_id as opportunity_manager_id,\n        opportunity_manager.user_name as opportunity_manager_name,\n        opportunity_manager.city opportunity_manager_city,\n        opportunity_manager.state as opportunity_manager_state,\n\n        -- If using user_role table, the following will be included, otherwise it will not.\n        \n        user_role.user_role_name as opportunity_owner_position, \n        user_role.developer_name as opportunity_owner_developer_name,\n        user_role.parent_role_id as opportunity_owner_parent_role_id,\n        user_role.rollup_description as opportunity_owner_rollup_description,\n        \n\n        case\n            when opportunity.is_won then 'Won'\n            when not opportunity.is_won and opportunity.is_closed then 'Lost'\n            when not opportunity.is_closed and lower(opportunity.forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n            else 'Other'\n        end as status,\n        case when is_created_this_month then amount else 0 end as created_amount_this_month,\n        case when is_created_this_quarter then amount else 0 end as created_amount_this_quarter,\n        case when is_created_this_month then 1 else 0 end as created_count_this_month,\n        case when is_created_this_quarter then 1 else 0 end as created_count_this_quarter,\n        case when is_closed_this_month then amount else 0 end as closed_amount_this_month,\n        case when is_closed_this_quarter then amount else 0 end as closed_amount_this_quarter,\n        case when is_closed_this_month then 1 else 0 end as closed_count_this_month,\n        case when is_closed_this_quarter then 1 else 0 end as closed_count_this_quarter\n\n        --The below script allows for pass through columns.\n        \n\n\n\n\n        \n\n\n\n\n        \n\n\n\n\n\n        -- If using user_role table, the following will be included, otherwise it will not.\n        \n        \n\n\n\n\n        \n\n    from opportunity\n    left join account \n        on opportunity.account_id = account.account_id\n    left join salesforce_user as opportunity_owner \n        on opportunity.owner_id = opportunity_owner.user_id\n    left join salesforce_user as opportunity_manager \n        on opportunity_owner.manager_id = opportunity_manager.user_id\n\n    -- If using user_role table, the following will be included, otherwise it will not.\n    \n    left join user_role \n        on opportunity_owner.user_role_id = user_role.user_role_id\n    \n)\n\nselect *\nfrom add_fields", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__opportunity_enhanced`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.945696Z", "completed_at": "2024-02-14T18:31:22.955105Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.956472Z", "completed_at": "2024-02-14T18:31:22.956476Z"}], "thread_id": "Thread-3", "execution_time": 0.028145790100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.not_null_stg_salesforce__user_role_user_role_id.949036e9bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_role_id\nfrom `dbt-package-testing`.`salesforce`.`stg_salesforce__user_role`\nwhere user_role_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.949546Z", "completed_at": "2024-02-14T18:31:22.955839Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.958170Z", "completed_at": "2024-02-14T18:31:22.958173Z"}], "thread_id": "Thread-2", "execution_time": 0.02864527702331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce_source.unique_stg_salesforce__user_role_user_role_id.1259050718", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select user_role_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`stg_salesforce__user_role`\n  where user_role_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.959787Z", "completed_at": "2024-02-14T18:31:22.967534Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.972154Z", "completed_at": "2024-02-14T18:31:22.972159Z"}], "thread_id": "Thread-4", "execution_time": 0.015858888626098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.int_salesforce__opportunity_aggregation_by_owner", "compiled": true, "compiled_code": "with salesforce_opportunity_enhanced as (\n    \n    select *\n    from `dbt-package-testing`.`salesforce`.`salesforce__opportunity_enhanced`\n), \n\nsalesforce_user as (\n\n    select * \n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n), \n\nbooking_by_owner as (\n\n    select \n        opportunity_manager_id as b_manager_id,\n        opportunity_owner_id as b_owner_id,\n        round(sum(closed_amount_this_month)) as bookings_amount_closed_this_month,\n        round(sum(closed_amount_this_quarter)) as bookings_amount_closed_this_quarter,\n        count(*) as total_number_bookings,\n        round(sum(amount)) as total_bookings_amount,\n        sum(closed_count_this_month) as bookings_count_closed_this_month,\n        sum(closed_count_this_quarter) as bookings_count_closed_this_quarter,\n        round(avg(amount)) as avg_bookings_amount,\n        max(amount) as largest_booking,\n        avg(days_to_close) as avg_days_to_close\n    from salesforce_opportunity_enhanced\n    where status = 'Won'\n    group by 1, 2\n), \n\nlost_by_owner as (\n\n    select \n        opportunity_manager_id as l_manager_id,\n        opportunity_owner_id as l_owner_id,\n        round(sum(closed_amount_this_month)) as lost_amount_this_month,\n        round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n        count(*) as total_number_lost,\n        round(sum(amount)) as total_lost_amount,\n        sum(closed_count_this_month) as lost_count_this_month,\n        sum(closed_count_this_quarter) as lost_count_this_quarter\n    from salesforce_opportunity_enhanced\n    where status = 'Lost'\n    group by 1, 2\n), \n\npipeline_by_owner as (\n\n    select \n        opportunity_manager_id as p_manager_id,\n        opportunity_owner_id as p_owner_id,\n        round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n        round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n        round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n        round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n        sum(created_count_this_month) as pipeline_count_created_this_month,\n        sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n        count(*) as total_number_pipeline,\n        round(sum(amount)) as total_pipeline_amount,\n        round(sum(amount * probability)) as total_pipeline_forecast_amount,\n        round(avg(amount)) as avg_pipeline_opp_amount,\n        max(amount) as largest_deal_in_pipeline,\n        avg(days_since_created) as avg_days_open\n    from salesforce_opportunity_enhanced\n    where status = 'Pipeline'\n    group by 1, 2\n)\n\nselect \n    salesforce_user.user_id as owner_id,\n    coalesce(p_manager_id, b_manager_id, l_manager_id) as manager_id,\n    booking_by_owner.*,\n    lost_by_owner.*,\n    pipeline_by_owner.*\nfrom salesforce_user\nleft join booking_by_owner \n    on booking_by_owner.b_owner_id = salesforce_user.user_id\nleft join lost_by_owner \n    on lost_by_owner.l_owner_id = salesforce_user.user_id\nleft join pipeline_by_owner \n    on pipeline_by_owner.p_owner_id = salesforce_user.user_id", "relation_name": "`dbt-package-testing`.`salesforce`.`int_salesforce__opportunity_aggregation_by_owner`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.964573Z", "completed_at": "2024-02-14T18:31:22.972440Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.974167Z", "completed_at": "2024-02-14T18:31:22.974171Z"}], "thread_id": "Thread-3", "execution_time": 0.012270212173461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__sales_snapshot", "compiled": true, "compiled_code": "with salesforce_opportunity_enhanced as (\n    \n    select *\n    from `dbt-package-testing`.`salesforce`.`salesforce__opportunity_enhanced`\n), \n\npipeline as (\n\n    select \n        round(sum(created_amount_this_month)) as pipeline_created_amount_this_month,\n        round(sum(created_amount_this_quarter)) as pipeline_created_amount_this_quarter,\n        round(sum(created_amount_this_month * probability)) as pipeline_created_forecast_amount_this_month,\n        round(sum(created_amount_this_quarter * probability)) as pipeline_created_forecast_amount_this_quarter,\n        sum(created_count_this_month) as pipeline_count_created_this_month,\n        sum(created_count_this_quarter) as pipeline_count_created_this_quarter,\n        count(*) as total_number_pipeline,\n        round(sum(amount)) as total_pipeline_amount,\n        round(sum(amount * probability)) as total_pipeline_forecast_amount,\n        round(avg(amount)) as avg_pipeline_opp_amount,\n        max(amount) as largest_deal_in_pipeline,\n        avg(days_since_created) as avg_days_open\n    from salesforce_opportunity_enhanced\n    where status = 'Pipeline'\n), \n\nbookings as (\n\n    select \n        round(sum(closed_amount_this_month)) as bookings_amount_closed_this_month,\n        round(sum(closed_amount_this_quarter)) as bookings_amount_closed_this_quarter,\n        count(*) as total_number_bookings,\n        round(sum(amount)) as total_bookings_amount,\n        sum(closed_count_this_month) as bookings_count_closed_this_month,\n        sum(closed_count_this_quarter) as bookings_count_closed_this_quarter,\n        round(avg(amount)) as avg_bookings_amount,\n        max(amount) as largest_booking,\n        avg(days_to_close) as avg_days_to_close\n    from salesforce_opportunity_enhanced\n    where status = 'Won'\n), \n\nlost as (\n\n    select \n        round(sum(closed_amount_this_month)) as lost_amount_this_month,\n        round(sum(closed_amount_this_quarter)) as lost_amount_this_quarter,\n        count(*) as total_number_lost,\n        round(sum(amount)) as total_lost_amount,\n        sum(closed_count_this_month) as lost_count_this_month,\n        sum(closed_count_this_quarter) as lost_count_this_quarter\n    from salesforce_opportunity_enhanced\n    where status = 'Lost'\n)\n\nselect \n    bookings.*,\n    pipeline.*,\n    lost.*,\n    case \n        when (bookings.bookings_amount_closed_this_month + lost.lost_amount_this_month) = 0 then null\n        else round( (bookings.bookings_amount_closed_this_month / (bookings.bookings_amount_closed_this_month + lost.lost_amount_this_month) ) * 100, 2 )\n    end as win_percent_this_month,\n    case \n        when (bookings.bookings_amount_closed_this_quarter + lost.lost_amount_this_quarter) = 0 then null\n        else round( (bookings.bookings_amount_closed_this_quarter / (bookings.bookings_amount_closed_this_quarter + lost.lost_amount_this_quarter) ) * 100, 2 ) \n    end as win_percent_this_quarter,\n    case \n        when (bookings.total_bookings_amount + lost.total_lost_amount) = 0 then null \n        else round( (bookings.total_bookings_amount / (bookings.total_bookings_amount + lost.total_lost_amount) ) * 100, 2) \n    end as total_win_percent\nfrom bookings, pipeline, lost", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__sales_snapshot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.967881Z", "completed_at": "2024-02-14T18:31:22.973563Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.975624Z", "completed_at": "2024-02-14T18:31:22.975628Z"}], "thread_id": "Thread-2", "execution_time": 0.012529850006103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__opportunity_enhanced_opportunity_id.0faefe3afc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opportunity_id\nfrom `dbt-package-testing`.`salesforce`.`salesforce__opportunity_enhanced`\nwhere opportunity_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.977003Z", "completed_at": "2024-02-14T18:31:22.985522Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.988996Z", "completed_at": "2024-02-14T18:31:22.989001Z"}], "thread_id": "Thread-4", "execution_time": 0.015084981918334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__opportunity_enhanced_opportunity_id.fb4f6a1788", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select opportunity_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__opportunity_enhanced`\n  where opportunity_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.981372Z", "completed_at": "2024-02-14T18:31:22.989283Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.990427Z", "completed_at": "2024-02-14T18:31:22.990431Z"}], "thread_id": "Thread-3", "execution_time": 0.011137008666992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__manager_performance", "compiled": true, "compiled_code": "with opportunity_aggregation_by_owner as (\n    \n    select *\n    from `dbt-package-testing`.`salesforce`.`int_salesforce__opportunity_aggregation_by_owner`\n), \n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nuser_role as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user_role`\n),\n\n\nsalesforce_user as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n)\n\nselect \n    coalesce(manager.user_id, 'No Manager Assigned') as manager_id,\n    coalesce(manager.user_name, 'No Manager Assigned') as manager_name,\n    manager.city as manager_city,\n    manager.state as manager_state,\n\n    -- If using user_role table, the following will be included, otherwise it will not.\n    \n    user_role.user_role_name as manager_position,\n    \n\n    count(distinct owner_id) as number_of_direct_reports,\n    coalesce(sum(bookings_amount_closed_this_month), 0) as bookings_amount_closed_this_month,\n    coalesce(sum(bookings_amount_closed_this_quarter), 0) as bookings_amount_closed_this_quarter,\n    coalesce(sum(total_number_bookings), 0) as total_number_bookings,\n    coalesce(sum(total_bookings_amount), 0) as total_bookings_amount,\n    coalesce(sum(bookings_count_closed_this_month), 0) as bookings_count_closed_this_month,\n    coalesce(sum(bookings_count_closed_this_quarter), 0) as bookings_count_closed_this_quarter,\n    coalesce(max(largest_booking), 0) as largest_booking,\n    coalesce(sum(lost_amount_this_month), 0) as lost_amount_this_month,\n    coalesce(sum(lost_amount_this_quarter), 0) as lost_amount_this_quarter,\n    coalesce(sum(total_number_lost), 0) as total_number_lost,\n    coalesce(sum(total_lost_amount), 0) as total_lost_amount,\n    coalesce(sum(lost_count_this_month), 0) as lost_count_this_month,\n    coalesce(sum(lost_count_this_quarter), 0) as lost_count_this_quarter,\n    coalesce(sum(pipeline_created_amount_this_month), 0) as pipeline_created_amount_this_month,\n    coalesce(sum(pipeline_created_amount_this_quarter), 0) as pipeline_created_amount_this_quarter,\n    coalesce(sum(pipeline_created_forecast_amount_this_month), 0) as pipeline_created_forecast_amount_this_month,\n    coalesce(sum(pipeline_created_forecast_amount_this_quarter), 0) as pipeline_created_forecast_amount_this_quarter,\n    coalesce(sum(pipeline_count_created_this_month), 0) as pipeline_count_created_this_month,\n    coalesce(sum(pipeline_count_created_this_quarter), 0) as pipeline_count_created_this_quarter,\n    coalesce(sum(total_number_pipeline), 0) as total_number_pipeline,\n    coalesce(sum(total_pipeline_amount), 0) as total_pipeline_amount,\n    coalesce(sum(total_pipeline_forecast_amount), 0) as total_pipeline_forecast_amount,\n    coalesce(max(largest_deal_in_pipeline), 0) as largest_deal_in_pipeline,\n    round(case \n        when sum(bookings_amount_closed_this_month + lost_amount_this_month) > 0 then\n        sum(bookings_amount_closed_this_month) / sum(bookings_amount_closed_this_month + lost_amount_this_month) * 100\n        else 0\n    end, 2) as win_percent_this_month,\n    round(case\n        when sum(bookings_amount_closed_this_quarter + lost_amount_this_quarter) > 0 then\n        sum(bookings_amount_closed_this_quarter) / sum(bookings_amount_closed_this_quarter + lost_amount_this_quarter) * 100\n        else 0\n    end, 2) as win_percent_this_quarter,\n    round(case\n        when sum(total_bookings_amount + total_lost_amount) > 0 then\n        sum(total_bookings_amount) / sum(total_bookings_amount + total_lost_amount) * 100\n        else 0\n    end, 2) as total_win_percent\n\nfrom opportunity_aggregation_by_owner\nleft join salesforce_user as manager\n    on manager.user_id = opportunity_aggregation_by_owner.manager_id\n\n-- If using user_role table, the following will be included, otherwise it will not.\n\nleft join user_role\n    on manager.user_role_id = user_role.user_role_id\n\ngroup by 1, 2, 3, 4, 5\n\n\n\nhaving count(distinct owner_id) > 0", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__manager_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.986315Z", "completed_at": "2024-02-14T18:31:22.990718Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:22.991756Z", "completed_at": "2024-02-14T18:31:22.991759Z"}], "thread_id": "Thread-2", "execution_time": 0.01122283935546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__owner_performance", "compiled": true, "compiled_code": "with opportunity_aggregation_by_owner as (\n    \n    select *\n    from `dbt-package-testing`.`salesforce`.`int_salesforce__opportunity_aggregation_by_owner`  \n), \n\nsalesforce_user as (\n\n    select *\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__user`\n)\n\nselect \n    opportunity_aggregation_by_owner.*,\n    salesforce_user.user_name as owner_name,\n    salesforce_user.city as owner_city,\n    salesforce_user.state as owner_state,\n    case \n        when (bookings_amount_closed_this_month + lost_amount_this_month) > 0 \n            then bookings_amount_closed_this_month / (bookings_amount_closed_this_month + lost_amount_this_month) * 100\n        else 0 \n    end as win_percent_this_month,\n    case \n        when (bookings_amount_closed_this_quarter + lost_amount_this_quarter) > 0 \n            then bookings_amount_closed_this_quarter / (bookings_amount_closed_this_quarter + lost_amount_this_quarter) * 100\n        else 0 \n    end as win_percent_this_quarter,\n    case \n        when (total_bookings_amount + total_lost_amount) > 0 \n            then total_bookings_amount / (total_bookings_amount + total_lost_amount) * 100\n        else 0 \n    end as total_win_percent\nfrom opportunity_aggregation_by_owner\njoin salesforce_user \n    on salesforce_user.user_id = opportunity_aggregation_by_owner.owner_id", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__owner_performance`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.998816Z", "completed_at": "2024-02-14T18:31:23.004533Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:23.005285Z", "completed_at": "2024-02-14T18:31:23.005289Z"}], "thread_id": "Thread-3", "execution_time": 0.01221609115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__manager_performance_manager_id.4adc491650", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select manager_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__manager_performance`\n  where manager_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:22.994710Z", "completed_at": "2024-02-14T18:31:23.005042Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:23.006698Z", "completed_at": "2024-02-14T18:31:23.006701Z"}], "thread_id": "Thread-4", "execution_time": 0.014870166778564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__manager_performance_manager_id.67d21c2781", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect manager_id\nfrom `dbt-package-testing`.`salesforce`.`salesforce__manager_performance`\nwhere manager_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:23.001580Z", "completed_at": "2024-02-14T18:31:23.005519Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:23.007234Z", "completed_at": "2024-02-14T18:31:23.007238Z"}], "thread_id": "Thread-2", "execution_time": 0.01437687873840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__owner_performance_owner_id.d39bad3ef7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner_id\nfrom `dbt-package-testing`.`salesforce`.`salesforce__owner_performance`\nwhere owner_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:23.009368Z", "completed_at": "2024-02-14T18:31:23.012344Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:23.012852Z", "completed_at": "2024-02-14T18:31:23.012856Z"}], "thread_id": "Thread-3", "execution_time": 0.005278348922729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__owner_performance_owner_id.b4050dc6e7", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select owner_id as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__owner_performance`\n  where owner_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:20.120865Z", "completed_at": "2024-02-14T18:31:29.542507Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:29.543677Z", "completed_at": "2024-02-14T18:31:29.543696Z"}], "thread_id": "Thread-1", "execution_time": 9.4286789894104, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.int_salesforce__date_spine", "compiled": true, "compiled_code": "with spine as (\n\n    \n    \n    \n    \n        \n            \n\n        \n\n    \n\n    \n    \n\n    \n\n     \n    \n        \n    \n        \n\n    \n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 1933\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n        datetime_add(\n            cast( '2018-10-31' as datetime),\n        interval row_number() over (order by 1) - 1 day\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= \n\n        datetime_add(\n            cast( '2024-02-14' as datetime),\n        interval 1 day\n        )\n\n\n\n)\n\nselect * from filtered\n\n\n)\n\nselect \n\ndistinct(date_day)\n\nfrom spine", "relation_name": "`dbt-package-testing`.`salesforce`.`int_salesforce__date_spine`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:29.547704Z", "completed_at": "2024-02-14T18:31:29.561365Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:29.562079Z", "completed_at": "2024-02-14T18:31:29.562085Z"}], "thread_id": "Thread-4", "execution_time": 0.01629495620727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.salesforce.salesforce__daily_activity", "compiled": true, "compiled_code": "with date_spine as (\n    \n    select \n        timestamp_trunc(\n        cast(date_day as timestamp),\n        day\n    ) as date_day\n    from `dbt-package-testing`.`salesforce`.`int_salesforce__date_spine`\n),\n\n\ntask as (\n    \n    select \n        timestamp_trunc(\n        cast(activity_date as timestamp),\n        day\n    ) as activity_date,\n        count(task_id) as tasks_completed\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__task`\n    group by 1\n), \n\n\n\nsalesforce_event as (\n\n    select \n        coalesce(timestamp_trunc(\n        cast(activity_date as timestamp),\n        day\n    ), timestamp_trunc(\n        cast(activity_date_time as timestamp),\n        day\n    )) as activity_date,\n        count(event_id) as events_completed\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__event`\n    group by 1\n), \n\n\n\n\nopportunity as (\n\n    select \n        opportunity_id,\n        timestamp_trunc(\n        cast(created_date as timestamp),\n        day\n    ) as created_date,\n        account_id,\n        timestamp_trunc(\n        cast(close_date as timestamp),\n        day\n    ) as close_date,\n        is_closed,\n        is_deleted,\n        is_won,\n        owner_id, \n        stage_name,\n        type,\n        amount,\n        case\n            when is_won then 'Won'\n            when not is_won and is_closed then 'Lost'\n            when not is_closed and lower(forecast_category) in ('pipeline','forecast','bestcase') then 'Pipeline'\n            else 'Other'\n        end as status\n    from `dbt-package-testing`.`salesforce`.`stg_salesforce__opportunity`\n),\n\nopportunities_created as (\n\n    select\n        created_date,\n        count(opportunity_id) as opportunities_created,\n        round(sum(amount)) as opportunities_created_amount\n    from opportunity\n    group by 1\n),\n\nopportunities_closed as (\n\n    select\n        close_date,\n        count(case when status = 'Won' then opportunity_id else null end) as opportunities_won,\n        round(sum(case when status = 'Won' then amount else 0 end)) as opportunities_won_amount,\n        count(case when status = 'Lost' then opportunity_id else null end) as opportunities_lost,\n        round(sum(case when status = 'Lost' then amount else null end)) as opportunities_lost_amount,\n        round(sum(case when status = 'Pipeline' then amount else null end)) as pipeline_amount\n    from opportunity\n    group by 1\n)\n\nselect\n    date_spine.date_day,\n\n    \n    \n    \n    task.tasks_completed,\n    \n\n    \n    salesforce_event.events_completed,\n    \n\n    opportunities_created.opportunities_created,\n    opportunities_created.opportunities_created_amount,\n    opportunities_closed.opportunities_won,\n    opportunities_closed.opportunities_won_amount,\n    opportunities_closed.opportunities_lost,\n    opportunities_closed.opportunities_lost_amount,\n    opportunities_closed.pipeline_amount\nfrom date_spine\n\n\n\n\nleft join task\n    on date_spine.date_day = task.activity_date\n\n\n\nleft join salesforce_event\n    on date_spine.date_day = salesforce_event.activity_date\n\n\nleft join opportunities_created\n    on date_spine.date_day = opportunities_created.created_date\nleft join opportunities_closed\n    on date_spine.date_day = opportunities_closed.close_date", "relation_name": "`dbt-package-testing`.`salesforce`.`salesforce__daily_activity`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:29.567050Z", "completed_at": "2024-02-14T18:31:29.574977Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:29.576262Z", "completed_at": "2024-02-14T18:31:29.576268Z"}], "thread_id": "Thread-3", "execution_time": 0.013099908828735352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.not_null_salesforce__daily_activity_date_day.154c971cb8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`salesforce`.`salesforce__daily_activity`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-14T18:31:29.570906Z", "completed_at": "2024-02-14T18:31:29.575339Z"}, {"name": "execute", "started_at": "2024-02-14T18:31:29.576592Z", "completed_at": "2024-02-14T18:31:29.576595Z"}], "thread_id": "Thread-1", "execution_time": 0.013186931610107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.salesforce.unique_salesforce__daily_activity_date_day.288eaadb04", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select date_day as unique_field\n  from `dbt-package-testing`.`salesforce`.`salesforce__daily_activity`\n  where date_day is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 10.78887391090393, "args": {"macro_debugging": false, "printer_width": 80, "which": "generate", "static_parser": true, "log_level": "info", "log_file_max_bytes": 10485760, "target": "dev_bigquery", "use_colors_file": true, "profiles_dir": "/Users/jamie.rodriguez/.dbt", "print": true, "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "log_level_file": "debug", "partial_parse": true, "static": false, "compile": true, "log_format_file": "debug", "defer": false, "enable_legacy_logger": false, "introspect": true, "version_check": true, "invocation_command": "dbt docs generate -t dev_bigquery", "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Salesforce/dbt_salesforce/integration_tests", "send_anonymous_usage_stats": true, "use_colors": true, "log_format": "default", "exclude": [], "cache_selected_only": false, "select": [], "strict_mode": false, "write_json": true, "indirect_selection": "eager", "empty_catalog": false, "populate_cache": true, "favor_state": false, "quiet": false, "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Salesforce/dbt_salesforce/integration_tests/logs", "show_resource_report": false, "partial_parse_file_diff": true}}